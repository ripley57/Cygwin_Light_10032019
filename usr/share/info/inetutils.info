This is inetutils.info, produced by makeinfo version 6.5 from
inetutils.texi.

This manual documents version 1.9.4 of the GNU networking utilities.

   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
2009, 2010, 2011, 2012, 2013, 2014, 2015 Free Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.3 or any later version published by the Free Software
     Foundation; with no Invariant Sections, no Front-Cover Texts, and
     no Back-Cover Texts.  A copy of the license is included in the
     section entitled "GNU Free Documentation License".
INFO-DIR-SECTION Basics
START-INFO-DIR-ENTRY
* Inetutils: (inetutils).       GNU networking utilities.
* Common options: (inetutils)Common options.      Common options.
END-INFO-DIR-ENTRY

INFO-DIR-SECTION Individual utilities
START-INFO-DIR-ENTRY
* ftp: (inetutils)ftp invocation.                 FTP client.
* ftpd: (inetutils)ftpd invocation.               FTP Daemon.
* inetd: (inetutils)inetd invocation.             Internet super-server.
* syslogd: (inetutils)syslogd invocation.         Syslog server.
* talk: (inetutils)talk invocation.               Talk client.
* talkd: (inetutils)talkd invocation.             Talk server.
* telnet: (inetutils)telnet invocation.           User interface to TELNET.
* telnetd: (inetutils)telnetd invocation.         Telnet server.
* uucpd: (inetutils)uucpd invocation.             Unix to Unix Copy.
END-INFO-DIR-ENTRY


File: inetutils.info,  Node: Top,  Next: Introduction,  Up: (dir)

GNU Inetutils
*************

This manual documents version 1.9.4 of the GNU networking utilities.

   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
2009, 2010, 2011, 2012, 2013, 2014, 2015 Free Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.3 or any later version published by the Free Software
     Foundation; with no Invariant Sections, no Front-Cover Texts, and
     no Back-Cover Texts.  A copy of the license is included in the
     section entitled "GNU Free Documentation License".

* Menu:

* Introduction::                       Caveats, overview, and authors.
* Common options::                     Common options.

Clients

* ftp invocation::                     FTP client.
* talk invocation::                    Talk client.
* telnet invocation::                  User interface to TELNET.

Daemons

* inetd invocation::		       Internet super-server.
* syslogd invocation::		       Syslog server.
* ftpd invocation::		       FTP Daemon.
* talkd invocation::		       Talk server.
* telnetd invocation::		       Telnet server.
* uucpd invocation::		       Unix to Unix Copy.

Appendix

* GNU Free Documentation License::     The license for this manual.
* Index::                              Index of manual.


File: inetutils.info,  Node: Introduction,  Next: Common options,  Prev: Top,  Up: Top

1 Introduction
**************

The GNU Network Utilities is a distribution of common networking
utilities and servers, including for example ping, traceroute and ftp.

   This manual is a work in progress: many sections make no attempt to
explain basic concepts in a way suitable for novices.  Thus, if you are
interested, please get involved in improving this manual.  The entire
GNU community will benefit.

   Please report bugs to <bug-inetutils@gnu.org>.  Remember to include
the version number, machine architecture, input files, and any other
information needed to reproduce the bug: your input, what you expected,
what you got, and why it is wrong.  Diffs are welcome, but please
include a description of the problem as well, since this is sometimes
difficult to infer.

   The individual utilities were originally derived from the 4.4BSDLite2
distribution, although some of them have more or less been rewritten.
What you are reading now is the authoritative and complete documentation
for these utilities; the man pages are now automatically generated.

   Many features were integrated from NetBSD, OpenBSD, FreeBSD and
GNU/Linux, the merges were done by a group of dedicated hackers (in no
particular order): Jeff Bailey, Marcus Brinkmann, Michael Vogt, Bernhard
Rosenkraenzer, Kaveh R. Ghazi, NIIBE Yutaka, Nathan Neulinger, Jeff
Smith, Dan Stromberg, David O'Shea, Frederic Goudal, Gerald Combs,
Joachim Gabler, Marco D'Itri, Sergey Poznyakoff, and many more.


File: inetutils.info,  Node: Common options,  Next: ftp invocation,  Prev: Introduction,  Up: Top

2 Common options
****************

Certain options are available in all these programs.  Rather than
writing identical descriptions for each of the programs, they are
described here.  (In fact, every GNU program accepts, or should accept,
these options.)

   Many of these programs take arbitrary strings as arguments.  In those
cases, '--help' and '--version' are taken as these options only if there
is one and exactly one command line argument.

'--help'
     Print a usage message, listing all available options, then exit
     successfully.

'--usage'
     Print a condensed usage message, displaying all available options
     formatted like a command line call, then exit successfully.

'--version'
     Print the version number, then exit successfully.

'--'
     Delimit the option list.  Later arguments, if any, are treated as
     operands even if they begin with '-'.

* Menu:

* Exit status::                 Indicating program success or failure.


File: inetutils.info,  Node: Exit status,  Up: Common options

2.1 Exit status
===============

Nearly every command invocation yields an integral "exit status" that
can be used to change how other commands work.  For the vast majority of
commands, an exit status of zero indicates success.  Failure is
indicated by a nonzero value -- typically '1', though it may differ on
unusual platforms, as POSIX requires only that it be nonzero.


File: inetutils.info,  Node: ftp invocation,  Next: talk invocation,  Prev: Common options,  Up: Top

3 'ftp': FTP client
*******************

'ftp' is the user interface to FTP, the File Transfer Protocol.  The
program allows a user to transfer files to and from a remote network
site.

Synopsis:

     ftp [OPTION...] [HOST [PORT]]
     pftp [OPTION...] [HOST [PORT]]

The alternate name 'pftp' is starting in passive mode, but is otherwise
identical to 'ftp'.

   The client host with which 'ftp' is to communicate may be specified
on the command line.  If this is done, 'ftp' will immediately attempt to
establish a connection to the FTP server running on that host.
Otherwise, the program will start a command interpreter and will await
further instructions from the user.  Commands can either be entered
interactively, or piped as a batched job read from standard input.
'ftp' is able to distinguish between these two modes of operation.

* Menu:

* Ftp options::
* Ftp commands::
* Ftp environment::
* Aborting a file transfer::
* File naming conventions::
* File transfer parameters::
* The .netrc file::


File: inetutils.info,  Node: Ftp options,  Next: Ftp commands,  Up: ftp invocation

3.1 Command line options
========================

Many command line options have counterparts among the commands handled
by the internal interpreter.

'-4'
'--ipv4'
     Initially set addressing to IPv4 only.

'-6'
'--ipv6'
     Initially set addressing to IPv6 only.

'-A'
'--active'
     Enable active mode transfer.  Default mode for 'ftp'.

'-d'
'--debug'
     Enable debugging output and possibly also socket debugging.

'-e'
'--no-edit'
     Disables the editing of commands.  This is default setting for
     batch mode, without a TTY.

'-g'
'--no-glob'
     Disables file name globbing.

'-i'
'--no-prompt'
     Turns off interactive prompting during multiple file transfers.

'-N NETRC'
'--netrc=NETRC'
     Set a preferred location of the '.netrc' file, thus overriding any
     environment setting in 'NETRC', as well as the default location
     '$HOME/.netrc', *note The .netrc file::.

'-n'
'--no-login'
     Restrains 'ftp' from attempting "auto-login" upon initial
     connection.  If auto-login is enabled, 'ftp' will check the
     '.netrc' (*note The .netrc file::) file in the user's home
     directory for an entry describing an account on the remote machine.
     If no entry exists, 'ftp' will prompt for the remote machine login
     name (default is the user identity on the local machine), and, if
     necessary, prompt for a password and an account with which to
     login.

'-p'
'--passive'
     Enable passive mode transfer.  Default mode when invoked as 'pftp'.

'--prompt[=PROMPT]'
     Print a command-line prompt, even if not on a tty.  If PROMPT is
     supplied, its value is used instead of the default 'ftp> '.
     Notice, that the argument is optional.

'-t'
'--trace'
     Enable packet tracing (not implemented).

'-v'
'--verbose'
     Start in verbose mode, printing informational messages.  This is
     default for interactive mode.


File: inetutils.info,  Node: Ftp commands,  Next: Ftp environment,  Prev: Ftp options,  Up: ftp invocation

3.2 Commands interpreted by 'ftp'
=================================

When 'ftp' is awaiting commands from the user, a prompt is displayed.
The default string is 'ftp>', but it can been changed with a command
line option, perhaps to enhance uniqueness while recording a session.

   Be aware that correct execution of many commands depends upon a
proper behavior of the remote server.  The following commands are
recognized by 'ftp' itself.  Command names can be abbreviated to the
shortest unique string with identical beginning.

'! [COMMAND [ARGS]]'
     Invoke an interactive shell on the local machine.  If there are
     arguments, the first is taken to be a command to execute directly,
     with the rest of the arguments as its arguments.

'$ MACRO-NAME [ARGS]'
     Execute the macro MACRO-NAME that was defined with the macdef
     command.  Arguments are passed to the macro unglobbed.

'account [PASSWD]'
     Supply a supplemental password required by a remote system for
     access to resources, once a login has been successfully completed.
     If no argument is included, the user will be prompted for an
     account password in non-echoing input mode.

'append LOCAL-FILE [REMOTE-FILE]'
     Append a local file to a file on the remote machine.  If
     REMOTE-FILE is left unspecified, the local file name is used in
     naming the remote file after being altered by any 'ntrans' or
     'nmap' setting.  File transfer uses the current settings for type,
     format, mode, and structure.

'ascii'
     Set the file transfer type to network ASCII. This is the default
     type, except when two unices are communicating.

'bell'
     Arrange that a bell be sounded after each file transfer command is
     completed.

'binary'
     Set the file transfer type to support binary image transfer.  This
     transfer type is selected during initial handshake, should the
     client on a Unix system recognize that the server is also running
     on a Unix system.

'bye'
'quit'
     Terminate the FTP session with the remote server and exit 'ftp'.
     An end of file will also terminate the session and exit.

'case'
     Toggle the remote computer's use of letter case mapping during
     'mget' commands.  When 'case' is 'on', a file name at the remote
     site whose every letter appear in upper case, will be renamed in
     such a way that all letters are changed to lower case for a local
     copy of the same file.  The default setting is 'off',

'cd REMOTE-DIRECTORY'
     Change the working directory on the remote machine to
     REMOTE-DIRECTORY.

'cdup'
     Change the remote machine's working directory to the parent of the
     current working directory.

'chmod MODE FILE-NAME'
     Change the access permission of the file FILE-NAME on the remote
     system to MODE.

'close'
'disconnect'
     Terminate the FTP session with the present remote server, and
     return to the command interpreter.  Any defined macros are erased.

'cr'
     Toggle carriage return stripping during ASCII type file retrieval.
     Records are denoted by a carriage return/linefeed sequence during
     ASCII type file transfer.  When 'cr' is 'on' (the default),
     carriage returns are stripped from this sequence to conform with
     the UNIX single linefeed record delimiter.  Records on non-UNIX
     remote systems may contain single linefeeds; when an ASCII type
     transfer is made, these linefeeds may be distinguished from a
     record delimiter only when 'cr' is 'off'.

'delete REMOTE-FILE'
     Delete the file REMOTE-FILE on the remote machine.

'debug [DEBUG-VALUE]'
     Toggle debugging mode.  If an optional DEBUG-VALUE is specified it
     is used to set the debugging level.  When debugging is on, 'ftp'
     prints each command sent to the remote machine, preceded by the
     string '-->'.

'dir [REMOTE-DIRECTORY] [LOCAL-FILE]'
     Print a listing of the contents in the directory REMOTE-DIRECTORY,
     and, optionally, place the output in LOCAL-FILE.  If interactive
     prompting is set, 'ftp' will prompt the user to verify that the
     last argument is the intended local file to receive output.  If no
     directory is specified, the current working directory on the remote
     machine is used.  If no local file is specified, or if LOCAL-FILE
     is a dash '-', then output is displayed on the terminal.

'epsv4'
     Toggle the use of EPSV/EPRT for IPv4 addressing.  Default is off.

'form FORMAT'
     Set the file transfer form to FORMAT.  The only supported format is
     'non-print'.

'get REMOTE-FILE [LOCAL-FILE]'
'recv REMOTE-FILE [LOCAL-FILE]'
     Retrieve the REMOTE-FILE and store it on the local machine.  If a
     local file name is not specified, the local copy is given the same
     name as is stated for the remote original, subject to alteration by
     the current 'case', 'ntrans', and 'nmap' settings.  The current
     settings for 'type', 'form', 'mode', and 'structure' are effective
     during file transfer.

'glob'
     Toggle file name expansion for 'mdelete', 'mget', and 'mput'.  If
     globbing is turned off with 'glob', the file name arguments are
     taken literally and are not expanded.  Globbing for 'mput' is done
     as in 'csh' syntax.  For 'mdelete' and 'mget', each remote file
     name is expanded separately on the remote machine and the lists are
     not merged.  Expansion of a directory name is likely to be
     different from expansion of the name of an ordinary file: the exact
     result depends on the remote operating system and on the FTP
     server, and can be previewed by issuing 'mls remote-files -'.

     Note: 'mget' and 'mput' are not meant to transfer entire directory
     subtrees of files.  That can be achieved by transferring an already
     created 'tar' or 'cpio' archive of the subtree, then making certain
     that 'ftp' uses binary mode.

'hash [SIZE]'
     In the absence of an argument, toggle the state of hash-sign ('#')
     printing after each transferred data block.  The optional argument
     selects the size of data blocks, and unconditionally activates
     printing.  The default size is 1024 bytes.  For convenience, the
     size can be written with postfix multipliers 'k', 'K', 'm', 'M',
     and 'g', 'G', to specify kilobytes, Megabytes, and Gigabytes,
     respectively.

'help [COMMAND]'
'? [COMMAND]'
     Print an informative message about the meaning of command.  If no
     argument is given, 'ftp' prints a list of the known commands.

'idle [SECONDS]'
     Set the inactivity timer on the remote server to SECONDS seconds.
     If seconds is omitted, the current inactivity timer is printed.

'ipv4'
     Select IPv4 as the only addressing scheme.

'ipv6'
     Select IPv6 as the only addressing scheme.

'ipany'
     Allow IPv4 as well as IPv6 addressing.

'lcd [DIRECTORY]'
     Change the working directory on the local machine.  If no directory
     is specified, the user's home directory is used.

'lpwd'
     Print the name of the current working directory on the local
     machine.

'ls [REMOTE-DIRECTORY] [LOCAL-FILE]'
     Print a listing of the contents of a directory on the remote
     machine.  The listing includes any system-dependent information
     that the server chooses to include; for example, most UNIX systems
     will produce output like the command 'ls -l' does.  Use 'nlist' for
     a simple file listing.

     If REMOTE-DIRECTORY is left unspecified, the current working
     directory is used.  With interactive prompting set, 'ftp' will
     prompt the user to verify that the last argument is indeed the
     intended local file for storing output.  Should no local file be
     specified, or if LOCAL-FILE is a dash '-', then output is sent to
     the terminal.

'macdef MACRO-NAME'
     Define a macro called MACRO-NAME, with subsequent lines as the
     macro definition.  A null line (consecutive newline characters in a
     file, or carriage returns at a terminal) terminates macro input
     mode.  There is a limit of 16 macros and a total of 4096 characters
     shared by all defined macros.  Only the first eight characters in
     MACRO-NAME are significant when determining which macro to execute.
     Macros remain defined until a close command is executed.

     The macro processor interprets '$' and '\' as special characters.
     A '$' followed by a number (one or more digits) is replaced by the
     corresponding argument on the macro's invocation command line.  A
     '$' followed by the letter 'i' tells the macro processor that the
     macro is to perform a loop.  On the first pass, '$i' is replaced by
     the first argument on the macro's invocation command line, while on
     the second pass it is replaced by the second argument, and so
     forth.  Iteration proceeds until all arguments have been consumed.

     A backslash '\' followed by any character is replaced by that
     character.  Use the backslash '\' to prevent special treatment of
     the dollar sign '$', as was just explained.

'mdelete [REMOTE-FILES]'
     Delete all REMOTE-FILES on the remote machine.

'mdir REMOTE-FILES LOCAL-FILE'
     Like 'dir', except multiple remote files may be specified.  If
     interactive prompting is on, 'ftp' will prompt the user to verify
     that the last argument is indeed the intended local file for
     storing any output from 'mdir'.

'mget REMOTE-FILES'
     Expand the REMOTE-FILES on the remote machine and execute a 'get'
     for each file name thus produced.  Resulting file names will then
     be processed according to 'case', 'ntrans', and 'nmap' settings.
     Files are transferred to the local working directory, which can be
     changed with 'lcd directory'; new local directories can be created
     with '! mkdir directory'.

'mkdir DIRECTORY-NAME'
     Make a directory on the remote machine.

'mls REMOTE-FILES LOCAL-FILE'
     Like 'nlist', except multiple remote files may be specified, and
     the LOCAL-FILE must be specified.  If interactive prompting is on,
     'ftp' will prompt the user to verify that the last argument is the
     intended local file for storing output.  A dash '-' is accepted as
     last argument without check!

'mode [MODE-NAME]'
     Set the file transfer mode to MODE-NAME.  The default mode is
     'stream', and it is also the only implemented mode.

'modtime FILE-NAME'
     Show the last modification time of the file on the remote machine.

'mput LOCAL-FILES'
     Consider the arguments to be local names and expand any wild card.
     Execute a 'put' for each file in the resulting list.  The remote
     file names are then computed by use of 'ntrans' and 'nmap'
     settings.

'newer FILE-NAME'
     Get the file only if the modification time of the remote file is
     more recent than the file on the current system.  If the file does
     not exist on the current system, the remote file is considered
     newer.  In other respects, this command is identical to 'get'.

'nlist [REMOTE-DIRECTORY] [LOCAL-FILE]'
     Print a list of the files in a directory on the remote machine.  If
     REMOTE-DIRECTORY is left unspecified, the current working directory
     is used.  If interactive prompting is on, 'ftp' will prompt the
     user to verify that the last argument is the intended local file
     for storing output.  If no local file is specified, or if
     LOCAL-FILE is '-', the output is sent to the terminal.

'nmap [INPATTERN OUTPATTERN]'
     Set or unset the file name mapping mechanism.  If no arguments are
     specified, the file name mapping mechanism is unset.  Name mapping
     is applied during 'mput' and 'put' commands issued without a
     specified remote target filename.  It as also applied to local file
     names during 'mget' and 'get' commands issued without local target
     file name.  This command is useful when connecting to a non-UNIX
     remote computer with different file naming conventions or
     practices.

     The mapping follows the pattern set by INPATTERN and OUTPATTERN.
     The template INPATTERN is used on incoming filenames (which may
     have already been processed according to the 'ntrans' and 'case'
     settings).  Variable templating is accomplished by including the
     sequences '$1', '$2', ..., '$9' in INPATTERN.  Use '\' to prevent
     this special treatment of the character '$'.  All other characters
     are treated literally, and must be matched in a file name for
     INPATTERN to bind substrings to variables.

     For example, take a pattern '$1.$2' and a file name 'mydata.data'.
     Then '$1' would have the value 'mydata', and '$2' would be 'data'.

     OUTPATTERN determines the final file name.  The sequences '$1' to
     '$9' are replaced by any values bound to them by INPATTERN.  A
     special sequence '$0' always contains the original filename.  In
     addition, a bracketted sequence '[SEQ1,SEQ2]' expands to SEQ1 if
     SEQ1 contains a non-empty string, and expands to SEQ2 otherwise.
     For example, the command

          nmap $1.$2.$3 [$1,$2].[$2,file]

     would yield the output file name 'myfile.data' for input names
     'myfile.data' and 'myfile.data.old', but produces 'myfile.file'
     from the input 'myfile', and 'myfile.myfile' from '.myfile'.

     Spaces may be included in OUTPATTERN, but are easily removed:

          nmap $1 |sed "s/ *$//" > $1

     Use a backslash '\' to escape the characters '$', '[', ']', and
     ','.

'ntrans [INCHARS [OUTCHARS]]'
     Set or unset the filename character translation mechanism.  If no
     arguments are specified, the filename character translation
     mechanism is unset.  If arguments are specified, characters in
     remote filenames are translated during 'mput' commands and 'put'
     commands issued without a specified remote target filename.  If
     arguments are specified, characters in local filenames are
     translated during 'mget' commands and 'get' commands issued without
     a specified local target filename.  This command is useful when
     connecting to a non-UNIX remote computer with different file naming
     conventions or practices.

     Characters in a filename matching a character in INCHARS are
     replaced with the corresponding character in OUTCHARS.  If the
     character's position in INCHARS is longer than the length of
     OUTCHARS, the character is deleted from the file name.

'open HOST [PORT]'
     Establish a connection to the specified FTP server at HOST.  An
     optional port number may be supplied, in which case, 'ftp' will
     attempt to contact the server at that specific TCP port.  If the
     'autologin' option is on (is so by default), 'ftp' will also
     attempt to automatically log the user in to the FTP server.

'passive'
     Toggle passive mode.  If passive mode is turned on (default is
     off), the 'ftp' client will send a 'PASV' command for all data
     connections instead of the usual 'PORT' command.  The 'PASV'
     command requests that the remote server open a port for the data
     connection and return the address of that port.  The remote server
     listens on that port and the client connects to it.  When using the
     more traditional 'PORT' command, the client listens on a port and
     sends that address to the remote server, who connects back to it.
     Passive mode is useful when using 'ftp' through a gateway router or
     host that controls the directionality of traffic.  (Note that
     though 'ftp' servers are required to support the 'PASV' command by
     RFC 1123, some do not.)  If 'epsv4' has been set to on, the client
     will attempt 'EPSV' before 'PASV' for IPv4.  As a last resort
     'LPSV' is attempted.  With IPv6 only 'EPSV' and 'LPSV' are
     possible.

'prompt'
     Toggle interactive prompting.  Interactive prompting occurs during
     multiple file transfers to allow the user to selectively retrieve
     or store files.  If prompting is turned off (default is on), any
     'mget' or 'mput' will transfer all files, and any 'mdelete' will
     delete all files.

'proxy FTP-COMMAND'
     Execute an 'ftp' command on a secondary control connection.  This
     command allows simultaneous connection to two remote FTP servers
     for transferring files between the two servers.  The first proxy
     command should be 'open', to establish the secondary control
     connection.  Enter the command 'proxy ?' to see other commands
     usable for the secondary connection.  The following commands behave
     differently when prefaced by 'proxy': 'open' will not define new
     macros during the auto-login process, 'close' will not erase
     existing macro definitions, 'get' and 'mget' transfer files from
     the host on the primary control connection to the host on the
     secondary control connection, and 'put', 'mput', and 'append'
     transfer files from the host on the secondary control connection to
     the host on the primary control connection.

     Note that the protocol command 'PASV' must be understood by the
     server on the secondary control connection for this kind of file
     transfer to succeed.

'put LOCAL-FILE [REMOTE-FILE]'
'send LOCAL-FILE [REMOTE-FILE]'
     Store a local file on the remote machine.  If REMOTE-FILE is left
     unspecified, the local file name is used after processing according
     to any 'ntrans' or 'nmap' settings in naming the remote file.  File
     transfer uses the current settings for type, format, mode, and
     structure.

'pwd'
     Print the name of the current working directory on the remote
     machine.

'quote ARG...'
     The arguments specified are sent, verbatim, to the remote FTP
     server.

'reget REMOTE-FILE [LOCAL-FILE]'
     'reget' acts like 'get', except that if LOCAL-FILE exists and is
     smaller than REMOTE-FILE, then LOCAL-FILE is presumed to be a
     partially transferred copy of REMOTE-FILE and the transfer is
     continued from the apparent point of failure.  This command is
     useful when transferring very large files over networks that are
     prone to dropping connections.

'rhelp [COMMAND-NAME]'
     Request help from the remote FTP server.  If COMMAND-NAME is
     specified it is passed to the server as well.

'rstatus [FILE-NAME]'
     With no arguments, show status of remote machine.  If filename is
     specified, show status of FILE-NAME on remote machine.

'rename [FROM] [TO]'
     Rename the file FROM on the remote machine as TO.  Name mapping
     takes effect without TO.

'reset'
     Clear reply queue.  This command re-synchronizes command/reply
     sequencing with the remote FTP server.  Resynchronization may be
     necessary following a violation of the FTP protocol by the remote
     server.

'restart MARKER'
     Restart the immediately following 'get' or 'put' at the indicated
     marker.  On UNIX systems, 'marker' is usually a byte offset into
     the file.

'rmdir DIRECTORY-NAME'
     Delete a directory on the remote machine.

'runique'
     Toggle the storing of files on the local system with unique
     filenames.  If a file already exists with a name equal to the
     inteded local file name for a 'get' or 'mget' command, then a
     string '.1' is appended to the name.  If the resulting name matches
     another existing file, '.2' is appended to the original name.  If
     this process continues up to '.99', an error message is printed,
     and the transfer does not take place.  The generated unique
     filename will be reported.  Note that 'runique' will not affect
     local files generated from a shell command.  The default value is
     off.

'sendport'
     Toggle the use of 'PORT' commands.  By default, 'ftp' will attempt
     to use a 'PORT' command when establishing a connection for each
     data transfer.  The use of 'PORT' commands can prevent delays when
     performing multiple file transfers.  If the 'PORT' command fails,
     'ftp' will use the default data port.  When the use of 'PORT'
     commands is disabled, no attempt will be made to use 'PORT'
     commands for each data transfer.  This is useful for certain FTP
     implementations which do ignore 'PORT' commands but, incorrectly,
     indicate they've been accepted.

'site ARG...'
     The arguments specified are sent, verbatim, to the remote FTP
     server as a 'SITE' command.

'size FILE-NAME'
     Return size of FILE-NAME on remote machine.

'status'
     Show the current status of 'ftp'.

'struct [STRUCT-NAME]'
     Set the file transfer structure to STRUCT-NAME.  By default 'file'
     structure is used, which also is the only supported value.

'sunique'
     Toggle storing of files on remote machine under unique file names.
     Remote FTP server must support FTP protocol 'STOU' command for
     successful completion.  The remote server will report unique name.
     Default value is off.

'system'
     Show the type of operating system running on the remote machine.

'tenex'
     Set the file transfer type to that needed to talk to TENEX
     machines.

'trace'
     Toggle packet tracing (feature is not implemented).

'type [TYPE-NAME]'
     Set the file transfer type to TYPE-NAME.  If no type is specified,
     the current type is printed.  The recognized type names are
     'ascii', 'binary', 'ebcdic', 'image', and 'tenex'.  The default
     type is network ASCII.

'umask [NEWMASK]'
     Set the default umask on the remote server to NEWMASK.  If NEWMASK
     is omitted, the current umask is printed.

'user USER-NAME [PASSWORD] [ACCOUNT]'
     Identify yourself to the remote FTP server.  If the password is not
     specified and the server requires it, 'ftp' will prompt the user
     for it (after disabling local echo).  If an account field is not
     specified, and the FTP server requires it, the user will be
     prompted for it.  If an account field is specified, an account
     command will be relayed to the remote server after the login
     sequence is completed if the remote server did not require it for
     logging in.  Unless 'ftp' is invoked with 'auto-login' disabled,
     this process is done automatically on initial connection to the FTP
     server.

'verbose'
     Toggle verbose mode.  In verbose mode, all responses from the FTP
     server are displayed to the user.  In addition, if verbose is on,
     when a file transfer completes, statistics regarding the efficiency
     of the transfer are reported.  By default, verbose is on.

   Command arguments which have embedded spaces may be inclosed within
citation characters '"'.


File: inetutils.info,  Node: Ftp environment,  Next: Aborting a file transfer,  Prev: Ftp commands,  Up: ftp invocation

3.3 Environment variables in use
================================

'ftp' accesses the following environment variables.

'HOME'
     Used for locating a '.netrc' file, if one exists.

'NETRC'
     Alternate location of the '.netrc' file, taking precedence over the
     standard location.

'SHELL'
     For determining the default shell interpreter.


File: inetutils.info,  Node: Aborting a file transfer,  Next: File naming conventions,  Prev: Ftp environment,  Up: ftp invocation

3.4 Aborting a file transfer
============================

To abort a file transfer, use the terminal interrupt key (usually
'C-c').  Sending transfers will be immediately halted.  Receiving
transfers will be halted by sending a FTP protocol command 'ABOR' to the
remote server, discarding any further data received.  The speed at which
this is accomplished depends upon the remote server's support for 'ABOR'
processing.  If the remote server does not support the 'ABOR' command,
an 'ftp>' prompt will not appear until the remote server has completed
sending the requested file.

   The terminal interrupt key sequence will be ignored when 'ftp' has
completed any local processing and is awaiting a reply from the remote
server.  A long delay in this mode may result from the 'ABOR' processing
described above, or from unexpected behavior by the remote server,
including violations of the FTP protocol.  If the delay results from
unexpected remote server behavior, the local 'ftp' program must be
killed by hand.


File: inetutils.info,  Node: File naming conventions,  Next: File transfer parameters,  Prev: Aborting a file transfer,  Up: ftp invocation

3.5 File naming conventions
===========================

Files specified as arguments to 'ftp' commands are processed according
to the following rules.

  1. If the file name '-' is specified, standard input (for reading) or
     standard output (for writing) is used.

  2. If the first character of the file name is '|', the remainder of
     the argument is interpreted as a shell command.  'ftp' then forks a
     shell, using 'popen' with the argument supplied, and reads/writes
     from standard input/output.  If the shell command includes spaces,
     the argument must be quoted; e.g.  '"ls -lt"'.

     A particularly useful example of this mechanism in action, is

          ftp> dir . |less

     which allows the user to scroll through a long directory listing.

  3. Failing the above checks, if "globbing" is enabled, local file
     names are expanded according to the rules used by 'csh'; c.f.  the
     'glob' command.  If the 'ftp' command expects a single local file
     (e.g.  'put'), only the first filename generated by the globbing
     operation is used.

  4. For the commands 'mget' and 'get' with unspecified local file name,
     the local file name is set to the remote file name, which may be
     altered by a 'case', 'ntrans', or 'nmap' settings.  The resulting
     file name may then be modified if 'runique' is set.

  5. For the commands 'mput' and 'put' with unspecified remote file
     name, the remote file name is copied from the local file name,
     which may be altered by a 'ntrans' or 'nmap' settings.  The
     resulting file name may also be modified by the remote server if
     'sunique' is set.


File: inetutils.info,  Node: File transfer parameters,  Next: The .netrc file,  Prev: File naming conventions,  Up: ftp invocation

3.6 File transfer parameters
============================

The FTP specification includes many parameters which may affect a file
transfer.  The type may be one of 'ascii', 'image' (binary), 'ebcdic',
and 'local' byte size (for PDP-10's and PDP-20's mostly).  'ftp'
supports the 'ascii' and 'image' types of file transfer, plus local byte
size 8 for tenex mode transfers.

   'ftp' supports only the default values for the remaining file
transfer parameters: 'mode', 'form', and 'struct'.

   An error in the treatment of carriage returns in the 4.2BSD
ascii-mode transfer code has been corrected by the present
implementation.  This correction may result in corrupt transfers of
binary files to and from 4.2BSD servers, when done using the ascii type.
Avoid this problem by using the binary image type.


File: inetutils.info,  Node: The .netrc file,  Prev: File transfer parameters,  Up: ftp invocation

3.7 The '.netrc' file
=====================

The '.netrc' file contains login and initialization information used by
the auto-login process.  It generally resides in the user's home
directory, but a location outside of the home directory can be set using
the environment variable 'NETRC'.  Both locations are overridden by the
command line option '-N'.  The selected file must be a regular file, or
access will be denied.

   The following tokens are recognized; they may be separated by spaces,
tabs, or new-lines:

'machine name'
     Identify a remote machine name.  The auto-login process searches
     the '.netrc' file for a machine token that matches the remote
     machine specified on the 'ftp' command line or as an open command
     argument.  Once a match is made, the subsequent '.netrc' tokens are
     processed, stopping when the end of file is reached or another
     machine or a default token is encountered.

'default'
     This is the same as machine name except that default matches any
     name.  There can be only one default token, and it must be after
     all machine tokens.  This is normally used as:

          default login anonymous password user@site

     thereby giving the user automatic anonymous ftp login to machines
     not specified in '.netrc'.  This can be overridden by using the
     '-n' flag to disable auto-login.

'login name'
     Identify a user on the remote machine.  If this token is present,
     the auto-login process will initiate a login using the specified
     name.

'password string'
     Supply a password.  If this token is present, the auto-login
     process will supply the specified string if the remote server
     requires a password as part of the login process.  Note that if
     this token is present in the '.netrc' file for any user other than
     anonymous, 'ftp' will abort the auto-login process if the '.netrc'
     is readable by anyone besides the user.

'account string'
     Supply an additional account password.  If this token is present,
     the auto-login process will supply the specified string if the
     remote server requires an additional account password, or the
     auto-login process will initiate an 'ACCT' command if it does not.

'macdef name'
     Define a macro.  This token functions like the 'ftp' 'macdef'
     command functions.  A macro is defined with the specified name; its
     contents begin with the next '.netrc' line and continue until a
     null line (consecutive new-line characters) is encountered.  If a
     macro named init is defined, it is automatically executed as the
     last step in the auto-login process.


File: inetutils.info,  Node: talk invocation,  Next: telnet invocation,  Prev: ftp invocation,  Up: Top

4 'talk': a communication program
*********************************

'talk' is a visual communication program which copies lines from your
terminal to that of another user.

Synopsis:

     talk PERSON [TTYNAME]

4.1 Invoking
============

The command line arguments are as follows:

PERSON
     If you wish to talk to someone on your own machine, then PERSON is
     just the other person's login name.  If you wish to talk to a user
     on another host, then PERSON is of the form 'user@host'.

TTYNAME
     If you wish to talk to a local user who is logged in more than
     once, the argument TTYNAME may be used to indicate the appropriate
     terminal name, where TTYNAME typically is of the form 'ttyXX', or
     'pts/X'.

   When first called, 'talk' sends a message to the addressed user:

     Message from TalkDaemon@his_machine...
     talk: connection requested by your_name@your_machine.
     talk: respond with: talk your_name@your_machine

At this point, the recipient of the message could elect to accept the
call and to establish a connection by typing:

     talk YOUR_NAME@YOUR_MACHINE

   It doesn't matter from which machine the recipient replies, as long
as his login-name is the same.  Once communication is established, the
two parties may type text simultaneously, with their output appearing in
separate windows.  Typing 'C-L' will cause the screen to be reprinted,
while erase, kill, and word kill characters will behave normally.  In
addition, 'C-D' will cause both windows to be locally cleared of all
text.  This keystroke will appear as a simple '^D' on the remote
terminal, though.  It signals to the other party that you yourself have
just cleared your terminal of all text.

   To exit, just type an interrupt character 'C-C'; 'talk' then moves
the cursor to the bottom of the screen and restores the terminal to its
previous state.

   The ability to talk may be enabled or disabled by use of the 'mesg'
command.  It is system dependent whether this message passing is enabled
at the outset of a terminal session.  Certain commands, in particular
'nroff' and 'pr', disable messages in order to prevent messy output.


File: inetutils.info,  Node: telnet invocation,  Next: inetd invocation,  Prev: talk invocation,  Up: Top

5 'telnet': User interface to TELNET
************************************

Login to a remote system HOST, optionally using a (non-standard) service
port PORT.

Synopsis:

     telnet [OPTION...] [HOST [PORT]]

5.1 Command line options
========================

'-4'
'--ipv4'
     Use only IPv4.

'-6'
'--ipv6'
     Use only IPv6.

'-8'
'--binary'
     Use an 8-bit data path.

'-a'
'--login'
     Attempt automatic login.

'-c'
'--no-rc'
     Do not read the user's file '$HOME/.telnetrc'.

'-d'
'--debug'
     Turn on socket level debugging.

'-e CHAR'
'--escape=CHAR'
     Use CHAR as escape character.

'-E'
'--no-escape'
     Do not use an escape character.

'-k REALM'
'--realm=REALM'
     Request Kerberos realm REALM instead of whatever is declared as
     default realm in the system's or user's settings.

'-K'
'--no-login'
     Do not automatically login to the remote system.

'-l USER'
'--user=USER'
     Attempt automatic login as USER.

'-L'
'--binary-output'
     Use an 8-bit data path for output only.

'-n FILE'
'--trace=FILE'
     Record trace information into FILE.

'-r'
'--rlogin'
     Display a user-interface similar to that of 'rlogin'.

'-x'
'--encrypt'
     If possible, encrypt the data stream.

'-X ATYPE'
'--disable-auth=ATYPE'
     Disable authentication of type ATYPE.  Use this option multiple
     times if more than one type is to be disabled.  Standard choices
     are 'null', 'kerberos_v4', and 'kerberos_v5'.


File: inetutils.info,  Node: inetd invocation,  Next: syslogd invocation,  Prev: telnet invocation,  Up: Top

6 'inetd': Internet super-server
********************************

'inetd' program should be run at boot time by /etc/rc.  It then listens
for connections on certain internet sockets.  When a connection is found
on one of its sockets, it decides what service the socket corresponds
to, and invokes a program to service the request.  The server program is
invoked with the service socket as its standard input, output and error
descriptors.  After the program is finished, inetd continues to listen
on the socket (except in some cases which will be described below).
Essentially, inetd allows running one daemon to invoke several others,
reducing load on the system.

   There are two types of services that inetd can start: standard and
TCPMUX. A standard service has a well-known port assigned to it; it may
be a service that implements an official Internet standard or is a
BSD-specific service.  As described in RFC 1078, TCPMUX services are
nonstandard services that do not have a well-known port assigned to
them.  They are invoked from inetd when a program connects to the
"tcpmux" well-known port and specifies the service name.  This feature
is useful for adding locally-developed servers.

* Menu:

* Invocation::
* Configuration file::
* Built-in services::
* TCPMUX::
* Inetd Environment::
* Error Messages::


File: inetutils.info,  Node: Invocation,  Next: Configuration file,  Up: inetd invocation

6.1 Invocation
==============

Normally, 'inetd' is invoked without any arguments.  It does, however,
support several command line options.  These are:

'-d'
'--debug'
     Turns on debugging.  With this option, 'inetd' stays in foreground
     and prints additional debugging information of stderr.

'--environment'
     Pass local and remote socket information in environment variables.
     *Note Inetd Environment::.

'-p[FILE]'
'--pidfile[=FILE]'
     Use FILE as location to store process ID of the running server
     process, thus overriding the default location.  Setting an empty
     argument will disable the use of a file for storing the process ID.

'--resolve'
     Resolve IP addresses when setting environment variables.  *Note
     Inetd Environment::.

'-R RATE'
'--rate=RATE'
     Specify the maximum number of times a service can be invoked in one
     minute; the default is 1000.

'-D'
'--no-daemonize'
     Do not run as a daemon.  (Cygwin specific)

'-T'
'--traditional-daemon'
     This option is present forbackwards compatibility.  (Cygwin
     specific)


File: inetutils.info,  Node: Configuration file,  Next: Built-in services,  Prev: Invocation,  Up: inetd invocation

6.2 Configuration file
======================

Upon execution, inetd reads its configuration information from
configuration files and directories named on the command line.  By
default these are '/etc/inetd.conf' and '/etc/initd.d'.  If the
configuration pathname is a directory, all files in the directory are
read and interpreted like a configuration file.  All of the
configuration files are read and the results are merged.

   There must be an entry for each field in the configuration file, with
entries for each field separated by a tab or a space.  Comments are
denoted by a "#" at the beginning of a line.  The available fields of
the configuration file are summarized in the table below (optional parts
are enclosed in square brackets):

[service node:]service name
     The service-name entry is the name of a valid service in the file
     '/etc/services'.  For "internal" services (*note Built-in
     services::), the service name must be the official name of the
     service (that is, the first entry in '/etc/services'), or a numeric
     representation thereof.  For TCPMUX services, the value of the
     'service name' field consists of the string 'tcpmux' followed by a
     slash and the locally-chosen service name (*note TCPMUX::).

     An optional 'service node' prefix is allowed for internet services.
     When present, it supplies the local addresses 'inetd' should use
     when listening for that service.  'Service node' consists of a
     comma-separated list of addresses.  Both symbolic host names and
     numeric IP addresses are allowed.  Symbolic hostnames are looked up
     in DNS service.  If a hostname has multiple address mappings,
     'inetd' creates a socket to listen on each address.

     To avoid repeating an address that occurs frequently, a line with a
     host address specifier and colon, but no further fields is allowed,
     e.g.:

          127.0.0.1,192.168.0.5:

     The address specifier from such a line is remembered and used for
     all further lines lacking an explicit host specifier.  Such a
     default address remains in effect until another such line or end of
     the configuration is encountered, whichever occurs first.

     A special hostname '*' stands for the wildcard address.  When used
     in a normal configuration line, it causes the default address
     specifier to be ignored for that line.  When used in a default
     address specification, e.g.:

          *:

     it causes any previous default address specifier to be forgotten.

socket type
     The socket type should be one of 'stream', 'dgram', 'raw', 'rdm',
     or 'seqpacket', depending on whether the socket is a stream,
     datagram, raw, reliably delivered message, or sequenced packet
     socket.  TCPMUX services must use 'stream'.

protocol
     The protocol must be a valid protocol as given in '/etc/protocols'.
     Examples might be 'tcp' or 'udp'.  TCPMUX services must use 'tcp'.
     If IPv6 support is enabled the sockets will accept both IPv4 and
     IPv6 connections if that is supported by the OS. If inetd should
     only accept IPv4 or IPv6 connections, add '4' or '6' to the
     protocol name.  For example 'tcp4' will only accept IPv4 tcp
     connections and 'udp6' will only accept IPv6 udp connections.

wait/nowait[.max]
     The 'wait/nowait' entry specifies whether the server that is
     invoked by 'inetd' will take over the socket associated with the
     service access point, and thus whether inetd should wait for the
     server to exit before listening for new service requests.  Datagram
     servers must use 'wait', as they are always invoked with the
     original datagram socket bound to the specified service address.
     These servers must read at least one datagram from the socket
     before exiting.  If a datagram server connects to its peer, freeing
     the socket so inetd can received further messages on the socket, it
     is said to be a "multi-threaded" server; it should read one
     datagram from the socket and create a new socket connected to the
     peer.  It should fork, and the parent should then exit to allow
     inetd to check for new service requests to spawn new servers.
     Datagram servers which process all incoming datagrams on a socket
     and eventually time out are said to be "single-threaded".  'comsat'
     and 'talkd' are both examples of the latter type of datagram
     server.  'tftpd' is an example of a multi-threaded datagram server.

     Servers using stream sockets generally are multi-threaded and use
     the 'nowait' entry.  Connection requests for these services are
     accepted by inetd, and the server is given only the newly-accepted
     socket connected to a client of the service.  Most stream-based
     services and all TCPMUX services operate in this manner.  For such
     services, the number of running instances of the server can be
     limitied by specifying optional 'max' suffix (a decimal number),
     e.g.: 'nowait.15'.

     Stream-based servers that use 'wait' are started with the listening
     service socket, and must accept at least one connection request
     before exiting.  Such a server would normally accept and process
     incoming connection requests until a timeout.  Other services must
     use 'nowait'.

user
     The user entry should contain the user name of the user as whom the
     server should run.  This allows for servers to be given less
     permission than root.  An optional form includes also a group name
     as a suffix, separated from the user name by colon or a period,
     i.e., 'user:group' or 'user.group'.

server program
     The server-program entry should contain the pathname of the program
     which is to be executed by inetd when a request is found on its
     socket.  If inetd provides this service internally, this entry
     should be 'internal'.

     It is common usage to specify '/usr/sbin/tcpd' in this field.

server program arguments
     The server program arguments should be just as arguments normally
     are, starting with 'argv[0]', which is the name of the program.  If
     the service is provided internally, this entry must contain the
     word 'internal', or be empty.


File: inetutils.info,  Node: Built-in services,  Next: TCPMUX,  Prev: Configuration file,  Up: inetd invocation

6.3 Built-in services
=====================

The 'inetd' program provides several "trivial" services internally by
use of routines within itself.  All these services can operate both in
'stream' and in 'dgram' mode.  They are:

echo
     Send back to the originating source any data received from it.
     This is a debugging and measurement tool.

discard
     Silently throw away any data received.

chargen
     This is a character generator service.  It can be operated as both
     stream or dgram service.  When operating in 'stream' mode, once a
     connection is established a stream of data is sent out the
     connection (and any data received is thrown away).  This continues
     until the calling user terminates the connection.  When operating
     in 'dgram' mode, 'inetd' listens for UDP datagrams, and for each
     received datagram, answers with a datagram containing a random
     number (between 0 and 512) of characters.  Any data in the received
     datagram are ignored.

daytime
     Send back the current date and time in a human readable form.  Any
     input is discarded.

time
     Send back the current date and time as a 32-bit integer number,
     nrepresenting the number of seconds since midnight, January 1,
     1900.


File: inetutils.info,  Node: TCPMUX,  Next: Inetd Environment,  Prev: Built-in services,  Up: inetd invocation

6.4 TCPMUX
==========

The TCPMUX protocol.

     A TCP client connects to a foreign host on TCP port 1.  It sends
     the service name followed by a carriage-return line-feed <CRLF>.
     The service name is never case sensitive.  The server replies with
     a single character indicating positive (+) or negative (-)
     acknowledgment, immediately followed by an optional message of
     explanation, terminated with a <CRLF>.  If the reply was positive,
     the selected protocol begins; otherwise the connection is closed."
     The program is passed the TCP connection as file descriptors 0 and
     1.

   If the TCPMUX service name begins with a "+", 'inetd' returns the
positive reply for the program.  This allows you to invoke programs that
use stdin/stdout without putting any special server code in them.

   The special service name 'help' causes inetd to list TCPMUX services
in 'inetd.conf'.

   To define TCPMUX services, the configuration file must contain a
'tcpmux internal' definition.

   Here are several example service entries for the various types of
services:

     ftp           stream  tcp   nowait root  /usr/libexec/ftpd     ftpd -l
     ntalk         dgram   udp   wait   nobody:tty /usr/libexec/talkd talkd
     tcpmux        stream  tcp   nowait root  internal
     tcpmux/+date  stream  tcp   nowait guest /bin/date             date
     tcpmux/phonebook stream tcp nowait guest /usr/bin/phonebook    phonebook


File: inetutils.info,  Node: Inetd Environment,  Next: Error Messages,  Prev: TCPMUX,  Up: inetd invocation

6.5 Inetd Environment
=====================

If a connection is made with a streaming protocol ('stream') and if
'--environment' option has been given, 'inetd' will set the following
environment variables before starting the program:

'PROTO'
     Always 'TCP'.

'TCPLOCALIP'
     Local IP address of the interface which accepted the connection.

'TCPLOCALPORT'
     Port number on which the TCP connection was established.

'TCPREMOTEIP'
     IP address of the remote client.

'TCPREMOTEPORT'
     Port number on the client side of the TCP connection.

   Additionally, if given the '--remote' option, 'inetd' sets the
following environment variables:

'TCPLOCALHOST'
     DNS name of 'TCPLOCALIP'.

'TCPREMOTEHOST'
     DNS name of 'TCPREMOTEIP'.


File: inetutils.info,  Node: Error Messages,  Prev: Inetd Environment,  Up: inetd invocation

6.6 Error Messages
==================

The inetd server logs error messages using syslog.  Important error
messages and their explanations are:

'service/protocol server failing (looping), service terminated.'
     The number of requests for the specified service in the past minute
     exceeded the limit.  The limit exists to prevent a broken program
     or a malicious user from swamping the system.  This message may
     occur for several reasons:

       1. there are lots of hosts requesting the service within a short
          time period,
       2. a "broken" client program is requesting the service too
          frequently,
       3. a malicious user is running a program to invoke the service in
          a "denial of service" attack,
       4. the invoked service program has an error that causes clients
          to retry quickly.

     Use the '-R' option, as described above, to change the rate limit.
     Once the limit is reached, the service will be reenabled
     automatically in 10 minutes.

'service/protocol: No such user 'user', service ignored'
'service/protocol: getpwnam: user: No such user'
     No entry for user exists in the passwd file.  The first message
     occurs when inetd (re)reads the configuration file.  The second
     message occurs when the service is invoked.

'service/protocol: No such user 'user', service ignored'
'service/protocol: getpwnam: user: No such user'
     No entry for user exists in the passwd file.  The first message
     occurs when inetd (re)reads the configuration file.  The second
     message occurs when the service is invoked.

'service: can't set uid number'
'service: can't set gid number'
     The user or group ID for the entry's user is invalid.


File: inetutils.info,  Node: syslogd invocation,  Next: ftpd invocation,  Prev: inetd invocation,  Up: Top

7 'syslogd': system service logging faclity
*******************************************

'syslogd' is a system service that provides error logging facility.
Messages are read from the UNIX domain socket '/dev/log', from an
Internet domain socket specified in '/etc/services', and from the
special device '/dev/klog' (to read kernel messages).

   'syslogd' creates the file '/var/run/syslog.pid', and stores its
process id there.  This can be used to kill or reconfigure 'syslogd'.

   The message sent to 'syslogd' should consist of a single line.  The
message can contain a priority code, which should be a preceding decimal
number in angle braces, for example, '<5>'.  This priority code should
map into the priorities defined in the include file 'sys/syslog.h'.

     syslogd [OPTIONS]...

'-f FILE'
'--rcfile=FILE'
     Override configuration (the default file is '/etc/syslog.conf').

'--rcdir=DIR'
     Override configuration directory (the default is '/etc/syslog.d').

'-P FILE'
'--pidfile=FILE'
     Override pidfile (the default file is '/var/run/syslogd.pid').

'-n'
'--no-detach'
     Do not enter daemon mode.

'-D'
'--no-daemonize'
     This is a synonym for '-n', and is provided for backwards
     compatibility with previous Cygwin ports.  This flag (or its
     synonym) is necessary when installing syslogd as service started
     from cygrunsrv.  The usual way to install syslogd as service is to
     run the syslogd-config script.  See
     '/usr/share/doc/Cygwin/inetutils.README' for more information.

'-d'
'--debug'
     Print debug information (implies '-n').

'-p FILE'
'--socket=FILE'
     Override default UNIX domain socket '/dev/log'.

'-a SOCKET'
     Add UNIX socket to listen.  An unlimited number of sockets is
     allowed.

'-r'
'--inet'
     Receive remote messages via Internet domain socket.  Without this
     option no remote massages are received, since there is no listening
     socket.  Yet sockets for forwarding are created on the fly as
     needed, which might cause performance issues on busy systems.

'-b ADDRESS'
'--bind=ADDRESS'
     Restrict the listening Internet domain socket to a single address.
     The default (given the use of '-r') is a wildcard address, implying
     that the server listens at every available address.  Any name will
     be resolved, and the lookup result will depend on the options '-4',
     '-6', and '--ipany'.

'--no-unixaf'
     Do not listen on UNIX domain sockets (overrides '-a' and '-p').

'--no-klog'
     Do not listen to the kernel log device '/dev/klog'.

'--ipany'
     Allow both address families: IPv4 and IPv6.

'-4'
'--ipv4'
     Use only IPv4 for Internet domain sockets.

'-6'
'--ipv6'
     Use only IPv6 for Internet domain sockets.

'--no-forward'
     Do not forward any messages (overrides '-h').  This disables even
     temporary creation of forwarding sockets, an ability which is
     otherwise active when the option '-r' is left out.

'-h'
'--hop'
     Forward messages from remote hosts.

'-m INTERVAL'
'--mark=INTERVAL'
     Specify timestamp interval expressed in minutes (0 for no
     timestamping).

'-l HOSTLIST'
     Log hosts in HOSTLIST by their hostname.  Multiple lists are
     allowed.

'-s DOMAINLIST'
     List of domains which should be stripped from the FQDN of hosts
     before logging their name.  Multiple lists are allowed.

'-T'
'--local-time'
     Ignore any time contained in a received message.  In its stead,
     record the time of reception on the local system.  This circumvents
     problems caused by remote hosts with skewed clocks.

7.1 Configuration file
======================

'syslogd' reads its configuration file when it starts up and whenever it
receives a hangup signal.  The 'syslog.conf' file is the main
configuration file for the 'syslogd' program.  In addition, the server
looks below the directory 'syslog.d/' for further configuration files,
making it easy to arrange a common set of logging conventions in
'syslog.conf', augmented by system and service specific drop-in
configuration in 'syslog.d/'.

   Each configuration file consists of lines with two fields: a
"selector" field which specifies the types of messages and priorities to
which the line applies, and an "action" field which specifies the action
to be taken if a message 'syslogd' receives matches the selection
criteria.  The selector field is separated from the action field by one
or more tab or space characters.  A rule can be split in several lines
if all lines except the last are terminated with a backslash '\'.

   There are two exceptional forms of line content.  The first is the
"tagged selector", and the second is a comment.  The latter begins with
an octothorp ('#'), also called hash, and continues until end-of-line.

   A tagged selector commences with an exclamation mark, as in '!name',
or with a shebang, like '#! name', and continues with a program name, a
"tag" in the sense used by 'logger'.  It has the effect of applying the
following configuration rules only to messages submitted with the
specified tag.  This selection remains in effect until another tag is
selected, or until it is reset by means of stating the program name as
an asterisque '*'.

   The selector fields are encoded as a facility, followed by a period
('.'), and a level, with no intervening white-space.  The facility as
well as the level are case insensitive.

   The facility describes the part of the system generating the message,
and is one of the following keywords: 'auth', 'authpriv', 'cron',
'daemon', 'kern', 'lpr', 'mail', 'mark', 'news', 'syslog', 'user',
'uucp' and 'local0' through 'local7'.  These keywords (with the
exception of 'mark') correspond to the similar 'LOG_' values specified
to the 'openlog' and 'syslog' library routines.  *Note Syslog:
(libc)Syslog, for details.

   The level describes the severity of the message, and is a keyword
from the following ordered list (higher to lower): 'emerg', 'alert',
'crit', 'err, warning', 'notice' and 'debug'.  These keywords correspond
to the similar 'LOG_' values specified to the syslog library routine.

   *Note syslog and vsyslog: (libc)syslog; vsyslog, for a further
descriptions of both the facility and level keywords and their
significance.

   If a received message matches the specified facility and is of the
specified level (or a higher level), the action specified in the action
field will be taken.

   Multiple selectors may be specified for a single action by separating
them with semicolon (';') characters.  It is important to note, however,
that each selector can modify the ones preceding it.

   Multiple facilities may be specified for a single level by separating
them with comma (',') characters.

   An asterisk ('*') can be used to specify all facilities or all
levels.  Two asterisks ('**') specifie all facilities not named
previously in the configuration file.

   By default, a level applies to all messages with the same or higher
level.  The equal ('=') character can be prepended to a level to
restrict this line of the configuration file to messages with the very
same level.

   An exclamation mark ('!') prepended to a level or the asterisk means
that this line of the configuration file does not apply to the specified
level (and higher ones).  In conjunction with the equal sign, you can
exclude single levels as well.

   The special facility 'mark' receives a message at priority 'info'
every 20 minutes.  This is not enabled by a facility field containing an
asterisk.

   The special level 'none' disables a particular facility.

   The action field of each line specifies the action to be taken when
the selector field selects a message.  There are five forms:

   * A pathname (beginning with a leading slash).  Selected messages are
     appended to the file.

     You may prepend a minus ('-') to the path to omit syncing the file
     after each message log.  This can cause data loss at system
     crashes, but increases performance for programs which use logging
     extensively.

   * A named pipe, beginning with a vertical bar ('|') followed by a
     pathname.  The pipe must be created with 'mkfifo' before 'syslogd'
     reads its configuration file.  This feature is especially useful
     for debugging.

   * A hostname (preceded by an at ('@') sign).  Selected messages are
     forwarded to 'syslogd' on the named host.

   * A comma separated list of users.  Selected messages are written to
     those users if they are logged in.

   * An asterisk.  Selected messages are written to all logged-in users.

     Blank lines and lines whose first non-blank character is a hash
     ('#') character are ignored.

   A configuration file might appear as follows:

     # Log all kernel messages, authentication messages of
     # level notice or higher and anything of level err or
     # higher to the console.
     # Don't log private authentication messages!
     *.err;kern.*;auth.notice;authpriv.none  /dev/console

     # Log anything (except mail) of level info or higher.
     # Don't log private authentication messages!
     *.info;mail.none;authpriv.none          /var/log/messages

     # The authpriv file has restricted access.
     authpriv.*                              /var/log/secure

     # Log all the mail messages in one place.
     mail.*                                  /var/log/maillog

     # Everybody gets emergency messages, plus log them on another
     # machine.
     *.emerg                                 *
     *.emerg                                 @arpa.berkeley.edu

     # Root and Eric get alert and higher messages.
     *.alert                                 root,eric

     # Simplify security auditing, by collecting sudo uses.
     ! sudo
     *.info                                  /var/log/sudo

     # Collect time server reports.
     #! ntpd
     *.*                                     /var/log/ntpd

     # Stop selecting on message tags.
     !*

     # Save mail and news errors of level err and higher in a
     # special file.
     uucp,news.crit                          /var/log/spoolerr

   The effects of multiple selectors are sometimes not intuitive.  For
example 'mail.crit,*.err' will select the 'mail' facility messages at
the level of 'err' or higher, not at the level of 'crit' or higher.


File: inetutils.info,  Node: ftpd invocation,  Next: talkd invocation,  Prev: syslogd invocation,  Up: Top

8 'ftpd': FTP daemon
********************

'ftpd' is the Internet File Transfer Protocol server process.  The
server uses the TCP protocol and listens at the port specified in the
'ftp' service specification.

     ftpd [OPTION]...

'-4'
'--ipv4'
     Daemon uses only IPv4 addressing.  Ignored in inetd mode.

'-6'
'--ipv6'
     Daemon uses only IPv6 addressing.  Ignored in inetd mode.

'-A'
'--anonymous-only'
     Only anonymous login is allowed.

'-a AUTH'
'--auth=AUTH'
     Specify what authentication mechanism to use for incoming
     connections.  Possible values are: 'kerberos', 'kerberos5', 'opie',
     'pam', and 'default'.

     Anonymous logins will continue to work when this option is used,
     unless the user 'ftp' is removed from the system.

'-D'
'--daemon'
     'ftpd' enters daemon-mode.  That allows 'ftpd' to be run without
     'inetd'.

'-d'
'--debug'
     Debugging information is written to the 'syslog' using facility
     'LOG_FTP'.

'-l'
'--logging'
     Each successful and failed ftp session is logged using 'syslog'
     with a facility of 'LOG_FTP'.  If this option is specified twice,
     the retrieve ('get'), store ('put'), append, delete, make
     directory, remove directory and rename operations and their
     filename arguments are also logged.

'--non-rfc2577'
     Do not follow the suggestion of RFC 2577 to suppress messages that
     could help an attacker to conduct user name enumeration.  This
     option allows the server to return with an error message
     immediately upon receipt of a user name.  Such information includes
     non-existence claims and expiration claims.  The ideal mode would
     otherwise be to fake the relevance of asking for a password, and
     only thereafter report an invalid login.

'-p PIDFILE'
'--pidfile=PIDFILE'
     Change default location of PIDFILE.

'-q'
'--no-version'
     Quiet mode.  No information about the version of the 'ftpd' is
     given to the client.

'-T'
'--max-timeout'
     A client may also request a different timeout period; the maximum
     period allowed may be set to timeout seconds with the '-T' option.
     The default limit is 2 hours.

'-t TIMEOUT'
'--timeout=TIMEOUT'
     The inactivity timeout period is set to timeout seconds (the
     default is 15 minutes).

'-u UMASK'
'--umask=UMASK'
     Set default umask, expressed in base 8.

   The file '/etc/nologin' can be used to disable FTP access.  If the
file exists, 'ftpd' displays it and exits.  If the file
'/etc/ftpwelcome' exists, 'ftpd' prints it before issuing the 'ready'
message.  If the file '/etc/motd' exists, 'ftpd' prints it after a
successful login.

   If this server was compiled with PAM support, then any non-anonymous
connection request will also be checked for settings pertaining to the
PAM service 'ftp', before finally being accepted.

   Linux-PAM is particular in that it also provides a module
'pam_ftp.so' influencing even anonymous access.  By convention the
present server relies on the functionality in that module when built on
relevant systems.  However, the module is known to be partially broken
since ten years back, when one compares the claims in its manual page,
so not all claimed trickery is available!

8.1 Standards
=============

The FTP server currently supports the following FTP requests.  The
letter case of any request is ignored.

Request                Description
--------------------------------------------------------------------------
ABOR                   abort previous command
ACCT                   specify account (ignored)
ALLO                   allocate storage (vacuously)
APPE                   append to a file
CDUP                   change to parent of current working directory
CWD                    change working directory
DELE                   delete a file
EPSV                   extended passive transfer request
EPRT                   specify data connection port
HELP                   give help information
LIST                   give list files in a directory ("ls -lgA")
LPRT                   specify data connection port
LPSV                   long passive transfer request
MKD                    make a directory
MDTM                   show last modification time of file
MODE                   specify data transfer mode
NLST                   give name list of files in directory
NOOP                   do nothing
PASS                   specify password
PASV                   prepare for server-to-server transfer
PORT                   specify data connection port
PWD                    print the current working directory
QUIT                   terminate session
REST                   restart incomplete transfer
RETR                   retrieve a file
RMD                    remove a directory
RNFR                   specify rename-from file name
RNTO                   specify rename-to file name
SITE                   non-standard commands
SIZE                   return size of file
STAT                   return status of server
STOR                   store a file
STOU                   store a file with a unique name
STRU                   specify data transfer structure
SYST                   show operating system type of server system
TYPE                   specify data transfer type
USER                   specify user name
XCUP                   change to parent of current working directory
                       (deprecated)
XCWD                   change working directory (deprecated)
XMKD                   make a directory (deprecated)
XPWD                   print the current working directory (deprecated)
XRMD                   remove a directory (deprecated)

   The following non-standard, or UNIX specific, commands are supported
by the 'SITE' request.

Request                Description
UMASK                  change umask, e.g.  'SITE UMASK 002'
IDLE                   set idle-timer, e.g.  'SITE IDLE 60'
CHMOD                  change mode of a file, e.g.  'SITE CHMOD0
                       0CHMOD1 1CHMOD2'
HELP                   give help information.

   The remaining FTP requests specified in RFC 959 are recognized, but
not implemented.  The extensions 'MDTM', 'REST', and 'SIZE' are
specified in RFC 3659, while 'EPRT' and 'EPSV' appear in RFC 2428,
'LPRT' and 'LPSV' in RFC 1639.

   The ftp server will abort an active file transfer only when the
'ABOR' command is preceded by a Telnet 'Interrupt Process' (IP) signal
and a Telnet 'Synch' signal in the command Telnet stream, as described
in Internet RFC 959.  If a 'STAT' command is received during a data
transfer, preceded by a Telnet IP and Synch, transfer status will be
returned.

   'ftpd' interprets file names according to the globbing conventions
used by 'csh'.  This allows users to utilize the metacharacters
'*?[]{}~'.

   The server applies the suggestions in RFC 2577, but the legacy
behaviour with informational content in denials can be restored using
the option '--non-rfc2577'.

8.2 Authentication
==================

'ftpd' authenticates users according to four rules.

  1. The login name must be in the password data base, '/etc/passwd',
     and must not have a null password.  In this case a password must be
     provided by the client before any file operations can be performed.

  2. The login name must not appear in the file '/etc/ftpusers'.

  3. The user must have a standard shell.

  4. If the user name is 'anonymous' or 'ftp', an anonymous ftp account
     must be present in the password file (user 'ftp').  In this case
     the user is allowed to log in by specifying any password (by
     convention an email address for the user should be used as the
     password).

   A further access mechanism is provided by the file '/etc/ftpchroot'.
A user mentioned therein will have all access confined to the subtree
rooted at the home directory specified in '/etc/passwd'.

   In the case of anonymous access, 'ftpd' takes special measures to
restrict the client's access privileges.  The server always performs a
chroot to the home directory of the 'ftp' user.

   In order that system security is not breached, it is recommended that
the 'ftp' subtree be constructed with care, following these rules:

'~ftp'
     Make the home directory owned by 'root' and not writable by anyone.

'~ftp/bin'
     Make this directory owned by 'root' and not writable by anyone
     (mode 555).  The program 'ls' must be present to support the list
     command, unless the server was compiled with libls support.  This
     program should be mode 111.

'~ftp/etc'
     Make this directory owned by 'root' and not writable by anyone
     (mode 555).  The files 'passwd' and 'group' must be present for the
     'ls' command to be able to produce owner names rather than numbers.
     The password field in 'passwd' is not used, and should not contain
     real passwords.  The file 'motd', if present, will be printed after
     a successful login.  These files should be mode 444.

'~ftp/pub'
     Make this directory mode 777 and owned by 'ftp'.  Guests can then
     place files which are to be accessible via the anonymous account in
     this directory.

8.3 Configuration files
=======================

''/etc/ftpchroot''
     List of users to enclose in a chrooted directory.  The anonymous
     user 'ftp' is always considered to be a member of this list,
     explicit or not.

''/etc/ftpusers''
     List of unwelcome/restricted users, always to be denied access.

''/etc/ftpwelcome''
     Welcome notice printed before server identification and any
     authentication exchange.

''/etc/motd''
     Welcome notice presented after completed login.

''/etc/nologin''
     If present, the contents are displayed and all further access is
     refused.

8.4 File format of ftpusers and ftpchroot.
==========================================

The files '/etc/ftpusers' and '/etc/ftpchroot' share a common file
format.  For better conformity with other implementations, each line is
understood as consisting of fields separated by spaces, or by horizontal
tabulators.  Only the first non-empty field is examined at present.
Both files are used for matching against a user name, desiring to use
the FTP service.

   Whenever the first printable character is a hash '#', the input line
is taken as a comment, and is ignored.  Lines lacking non-empty fields
are likewise ignored.

   A field consisting of a single at-sign '@', is treated as a wildcard
and matches every input.

   A field commencing with an at-sign '@' and then continuing with an
identifier, is understood as giving the name of a group.  Should this
name exist in '/etc/groups', and the user name be a member of this same
group, then the user name matches.

   In all other cases, the field is taken as the identifier of a user,
with which the requesting user is compared for verbatim match.

   It is worthwhile to observe from the above cases, that a single '@'
on a line by itself in '/etc/ftpchroot', will enforce chrooting upon
every user allowed to access the FTP service.  This gives a Draconian,
protective configuration.


File: inetutils.info,  Node: talkd invocation,  Next: telnetd invocation,  Prev: ftpd invocation,  Up: Top

9 'talkd': a server for communication between users
***************************************************

'talkd' is a server that notifies users that someone else wants to
initiate a conversation.  It acts as a repository of invitations,
responding to requests by clients wishing to rendezvous for a
conversation.

   This implementation uses the newer protocol 'ntalk/udp', and is
intended to be invoked by a super-server 'inetd' at that datagram port.
It is recommended that 'inetd' launch 'talkd' with ownership
'nobody:tty', or with 'tty:tty'.  However, this works with ACL only if
'.talkrc' can be assumed to be world readable for all users.  This
failing, the process ownership will need to be 'root:tty' if the
ACL-mechanism is to be usable and trustworthy.

   Keep in mind that this service is usable with IPv4 only, since the
exchange protocol was conceived to handle only this particular address
family.  This fact is independent of the abilities of 'inetd'.

   Observe also that the server 'talkd' depends on the name returned by
'hostname', for establishing connections between interested parties.  A
server 'talkd' running on a multi-homed host is not able to respond to
invitations for a valid host name that differs from the name reported by
'hostname'.

   The present implementation offers ACL-mechanisms for fine grained
access control.

9.1 Invoking
============

The following switches and options are available.

'-a FILE'
'--acl=FILE'
     Read site-wide ACLs from FILE.

'-d'
'--debug'
     Enable debugging.

'-i SECONDS'
'--idle-timeout=SECONDS'
     Set idle timeout length

'-l'
'--logging'
     Enable a somewhat enhanced logging verbosity, reporting attempted
     and dropped connections, as well as some more unexpected events
     that might arise.

'-r SECONDS'
'--request-ttl=SECONDS'
     Set time-to-live length for requests.

'-S'
'--strict-policy'
     Apply strict ACL policy on this system.  This means that the
     site-wide ACL must provide explicit 'allow' rules for admitting
     traffic at all.

'-t SECONDS'
'--timeout=SECONDS'
     Set timeout length.

9.2 Modus operandi
==================

In normal operation, a client, the caller, initiates a rendezvous by
sending a 'CTL_MSG' of type 'LOOK_UP' to the server (see
'protocols/talkd.h').  This causes the server to search its invitation
tables to check whether an invitation currently exists for the caller
(wanting to talk to the callee specified in the message).  If the lookup
fails, the caller then sends an 'ANNOUNCE' message causing the server to
broadcast an announcement on the callee's login ports requesting
contact.  When the callee responds, the local server uses the recorded
invitation to respond with the appropriate rendezvous address and the
caller and callee client programs establish a stream connection through
which the conversation takes place.

   This implementation offers an additional mechanism, whereby a
site-wide access control list can be used to limit service access in
general.  For any local user, i.e., present on the server's system, a
further user owned file '.talkrc' is parsed, if at all present, in order
to even further fine tune access to this particular user.

9.3 Access control in talkd
===========================

The server can be run in a mode with additional access control, beyond
the legacy capabilities of 'ntalkd'.  This is activated using the option
'-a', or equivalently '--acl'.

   The format of this access control list is shared with the user
specific file '.talkrc'.  Normally the site-wide setting operates with a
default value 'allow', but specifying the option '-S', or
'--strict-policy', changes this default action to 'deny'.  In addition,
the strict policy disables the possibility that an allowing action from
the user specific ACL be able to override a denial resulting from the
system-wide ACL setting.

   As is usual, indentation, empty lines, and lines whose first
printable character is the hash character, are all ignored.  The general
line format is

     action user-exp [net-exp ...]

Each active line must contain at least two fields: an 'action' and a
'user-exp'.

   The first field, 'action', must be either of 'allow' and 'deny'.  Any
other value will lead to the line being ignored, but reported in the
system log.  Of course, the two values represent admitting and rejecting
interpretations for the resulting rule.

   The second field, 'user-exp', is a POSIX regular expression crafted
to match user names.  Remember that the regular expression would need
anchors in order to test not only substrings.

   It is important to note that in a site-wide ACL, the file selected by
the switch '-a', the expression 'user-exp' is matched against the
requested local user name, that of the callee.

   While checking the callee's private ACL-file '.talkrc', the matching
of 'user-exp' is done against the remote caller's name.  Any other
interpretation is plainly futile.

   Each line may be augmented by a net list, containing one or more
expressions 'net-exp'.  Each of these is either the simple word 'any', a
numeric IPv4 address, or a full IPv4 address with an appended netmask.
The effect is to restrict the applicability of the rule to the specified
address range, or to set an explicit wildcard match 'any'.  The absence
of a net list is equivalent to specifying a single 'any'.  The netmask
can be specified as a CIDR mask length, or as an explicit address mask.

   The actual evaluation is made separately for the site-wide ACL, and
for the requested local user ACL, contained in the callee's private file
'.talkrc'.  This latter file must be a regular file and must be owned by
the very same user, have his primary group ownership, and not be group
or world writeable.  Should any of these prerequisites be violated, the
user's ACL is replaced by a single deny-all rule.

   All rules in each set are evaluated, in the sense that whenever an
expression 'net-exp' matches the incoming IPv4 address, then the regular
expression 'user-exp' is tested for a match.  That being the case, the
corresponding action is recorded.  The last match in each set determines
the outcome in its category.

   In the most common case, a system wide 'deny' is overridden if the
local user has specified at least one valid and applicable rule,
admitting access.  In the contrary case, where no admitting user rule
could be established at all, then a resulting 'deny', from a system wide
ACL, will be used as the final action.

   In strict policy mode, a site-wide 'deny' is always final, ignoring
any user's desire.  The administrator must explicitly arrange some
admitting rule, with an action 'allow', and some suitable net list.
Still, the individual user can arrange his private file for an even
narrower selection of friends.


File: inetutils.info,  Node: telnetd invocation,  Next: uucpd invocation,  Prev: talkd invocation,  Up: Top

10 'telnetd': Telnet server
***************************

     telnetd [OPTION]...

'-a AUTHMODE'
'--authmode=AUTHMODE'
     Specify what mode to use for authentication.  Allowed values are:
     'none', 'other', 'user', 'valid', and 'off'.

'-D[LIST]'
'--debug=[LIST]'
     Set the debugging level.  The argument is a comma separated list of
     these categories: 'options', 'report', 'netdata', 'ptydata',
     'auth', and 'encr'.  All these may be used in the form
     'name[=level]'.  Omission of 'level' implies the maximal possible
     debugging level for that particular category.

     There is one additional category 'tcp', which does not take an
     additional level indicator, but is instead equivalent to setting
     the socket option 'SO_DEBUG' for debugging the complete traffic.

     The output is written to the file '/tmp/telnet.debug', and any new
     data is incrementally added as time passes.

'-E STRING'
'--exec-login=STRING'
     Set program to be executed instead of '/bin/login'.

'-h'
'--no-hostinfo'
     Do not print host information before login has been completed.

'-l[MODE]'
'--linemode=[MODE]'
     Set line mode.  An empty argument will force line read mode at all
     times.  The only recognised value is otherwise 'nokludge'.

'-n'
'--no-keepalive'
     Disable TCP keep-alives.

'-S PRINCIPAL'
'--server-principal=PRINCIPAL'
     Set principal name for the server, to be used in Kerberos
     authentication.  The value PRINCIPAL can be set to provide full
     specification like 'srv.local@REALM' and 'tnt/localhost@REALM',
     where the first uses the standard prefix 'host/'.  Or PRINCIPAL can
     override default settings in part only, like 'srv.local',
     'tnt/srv.local', or '@REALM'.

'-U'
'--reverse-lookup'
     Refuse connections from addresses that cannot be mapped back into a
     symbolic name.  A client is accepted only if the IP address can be
     resolved as a host name, and the same name is resolvable to
     addresses among which the clients's address is included.

'-X AUTHTYPE'
'--disable-auth-type=AUTHTYPE'
     Disable the use of the given authentication type.  Use this option
     multiple times if more than one type is to be disabled.  Standard
     choices are 'null', 'kerberos_v4', and 'kerberos_v5'.

10.1 Crafting an execution string.
==================================

The server 'telnetd' contains a built-in execution string which invokes
'login' with arguments suitable for the operating system at hand.  This
preset choice corresponds to the standard use case of the service.  For
specialized purposes this implementation also offers a command line
option '-E', or '--exec-login', to override the built-in execution of
'login', thus allowing almost any choice of handler.

A custom execution string could look like

     telnetd -h -E '/usr/local/sbin/avrop  %t %U'

The execution string must as its first part provide an absolute path to
an executable file.  After that may follow arbitrary additional
arguments.  For this latter part, 'telnetd' offers some replacement
tokens that dynamically are replaced by content.  All are of the form
'%<var>', where '<var>' is a single letter from the following collection
of selectors.  A valid letter is called "variable".  The mark
_conditional_, appearing below, indicates that the corresponding
variable is conditionally assigned a value.

'%a'
     Returns 'ok' whenever authentication is complete.  _conditional_

'%d'
     Produces a time and date string.

'%h'
     Gives the remote host name in canonical form.

'%l'
     States the local host name, also in canonical form.

'%L'
     Returns the path of the pseudo terminal assigned to the client.

'%t'
     Gives the terminal device stripped of the leading '/dev/'.

'%T'
     States the terminal type, like 'xterm'.  _conditional_

'%u'
     Provides the authenticated user name.  _conditional_

'%U'
     Returns the user name passed as an environment variable 'USER' by
     the remote client software.  The value is empty, should the
     environment not provide a value.

   In addition, a conditional construct is able to take one action in
case a variable has an assigned value, and optionally to take another
action in the opposite case.  The contruct is

     %?<var>{true-stmt}[{false-stmt}]

The braces are here mandatory, while the brackets enclose the optional
else-clause and are not included in actual use.  The initial, motivating
example, could thus be expanded to read

     telnetd -h -E '/usr/local/sbin/avrop  %t %?a{%u krb5}{%U}'

In case authentication was completed as user 'sigge', the execution
string would resolve to

     /usr/local/sbin/avrop  pts/1 sigge krb5

In all other cases the result would be

     /usr/local/sbin/avrop  pts/1 $USER

where '$USER' is the value of the corresponding environment variable and
could possibly be empty.


File: inetutils.info,  Node: uucpd invocation,  Next: GNU Free Documentation License,  Prev: telnetd invocation,  Up: Top

11 'uucpd': Unix to Unix Copy relay daemon.
*******************************************

'uucpd' is a relay daemon responsible for accepting TCP transported
connections for 'uucico'.  It is started by 'inetd', conducts any
authentication, and then hands acceptable requests over to 'uucico'.

     uucpd [OPTION]...

11.1 Options
============

There is a single, specific option available:

'-u LOCATION'
'--uucico=LOCATION'
     Replace the hard coded location of 'uucico' with the value
     specified as LOCATION.

11.2 Authentication steps.
==========================

Invocation is expected to be conducted by a protocol described exchange
of user name and password; unfortunately in clear text.  If those agree
with existing local entries, then 'uucpd' verifies that the stated user
also has user shell location identical to the full file system location
of 'uucico'.  Should that not be the case, the request is declined.

   For this latter check, the option '--uucico' is useful when setting
the configuration for 'inetd'.  It is recommended to wrap the invocation
line of 'uucpd' within a call to 'tcpd' in the standard fashion.


File: inetutils.info,  Node: GNU Free Documentation License,  Next: Index,  Prev: uucpd invocation,  Up: Top

Appendix A GNU Free Documentation License
*****************************************

                     Version 1.3, 3 November 2008

     Copyright (C) 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
     <http://fsf.org/>

     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

  0. PREAMBLE

     The purpose of this License is to make a manual, textbook, or other
     functional and useful document "free" in the sense of freedom: to
     assure everyone the effective freedom to copy and redistribute it,
     with or without modifying it, either commercially or
     noncommercially.  Secondarily, this License preserves for the
     author and publisher a way to get credit for their work, while not
     being considered responsible for modifications made by others.

     This License is a kind of "copyleft", which means that derivative
     works of the document must themselves be free in the same sense.
     It complements the GNU General Public License, which is a copyleft
     license designed for free software.

     We have designed this License in order to use it for manuals for
     free software, because free software needs free documentation: a
     free program should come with manuals providing the same freedoms
     that the software does.  But this License is not limited to
     software manuals; it can be used for any textual work, regardless
     of subject matter or whether it is published as a printed book.  We
     recommend this License principally for works whose purpose is
     instruction or reference.

  1. APPLICABILITY AND DEFINITIONS

     This License applies to any manual or other work, in any medium,
     that contains a notice placed by the copyright holder saying it can
     be distributed under the terms of this License.  Such a notice
     grants a world-wide, royalty-free license, unlimited in duration,
     to use that work under the conditions stated herein.  The
     "Document", below, refers to any such manual or work.  Any member
     of the public is a licensee, and is addressed as "you".  You accept
     the license if you copy, modify or distribute the work in a way
     requiring permission under copyright law.

     A "Modified Version" of the Document means any work containing the
     Document or a portion of it, either copied verbatim, or with
     modifications and/or translated into another language.

     A "Secondary Section" is a named appendix or a front-matter section
     of the Document that deals exclusively with the relationship of the
     publishers or authors of the Document to the Document's overall
     subject (or to related matters) and contains nothing that could
     fall directly within that overall subject.  (Thus, if the Document
     is in part a textbook of mathematics, a Secondary Section may not
     explain any mathematics.)  The relationship could be a matter of
     historical connection with the subject or with related matters, or
     of legal, commercial, philosophical, ethical or political position
     regarding them.

     The "Invariant Sections" are certain Secondary Sections whose
     titles are designated, as being those of Invariant Sections, in the
     notice that says that the Document is released under this License.
     If a section does not fit the above definition of Secondary then it
     is not allowed to be designated as Invariant.  The Document may
     contain zero Invariant Sections.  If the Document does not identify
     any Invariant Sections then there are none.

     The "Cover Texts" are certain short passages of text that are
     listed, as Front-Cover Texts or Back-Cover Texts, in the notice
     that says that the Document is released under this License.  A
     Front-Cover Text may be at most 5 words, and a Back-Cover Text may
     be at most 25 words.

     A "Transparent" copy of the Document means a machine-readable copy,
     represented in a format whose specification is available to the
     general public, that is suitable for revising the document
     straightforwardly with generic text editors or (for images composed
     of pixels) generic paint programs or (for drawings) some widely
     available drawing editor, and that is suitable for input to text
     formatters or for automatic translation to a variety of formats
     suitable for input to text formatters.  A copy made in an otherwise
     Transparent file format whose markup, or absence of markup, has
     been arranged to thwart or discourage subsequent modification by
     readers is not Transparent.  An image format is not Transparent if
     used for any substantial amount of text.  A copy that is not
     "Transparent" is called "Opaque".

     Examples of suitable formats for Transparent copies include plain
     ASCII without markup, Texinfo input format, LaTeX input format,
     SGML or XML using a publicly available DTD, and standard-conforming
     simple HTML, PostScript or PDF designed for human modification.
     Examples of transparent image formats include PNG, XCF and JPG.
     Opaque formats include proprietary formats that can be read and
     edited only by proprietary word processors, SGML or XML for which
     the DTD and/or processing tools are not generally available, and
     the machine-generated HTML, PostScript or PDF produced by some word
     processors for output purposes only.

     The "Title Page" means, for a printed book, the title page itself,
     plus such following pages as are needed to hold, legibly, the
     material this License requires to appear in the title page.  For
     works in formats which do not have any title page as such, "Title
     Page" means the text near the most prominent appearance of the
     work's title, preceding the beginning of the body of the text.

     The "publisher" means any person or entity that distributes copies
     of the Document to the public.

     A section "Entitled XYZ" means a named subunit of the Document
     whose title either is precisely XYZ or contains XYZ in parentheses
     following text that translates XYZ in another language.  (Here XYZ
     stands for a specific section name mentioned below, such as
     "Acknowledgements", "Dedications", "Endorsements", or "History".)
     To "Preserve the Title" of such a section when you modify the
     Document means that it remains a section "Entitled XYZ" according
     to this definition.

     The Document may include Warranty Disclaimers next to the notice
     which states that this License applies to the Document.  These
     Warranty Disclaimers are considered to be included by reference in
     this License, but only as regards disclaiming warranties: any other
     implication that these Warranty Disclaimers may have is void and
     has no effect on the meaning of this License.

  2. VERBATIM COPYING

     You may copy and distribute the Document in any medium, either
     commercially or noncommercially, provided that this License, the
     copyright notices, and the license notice saying this License
     applies to the Document are reproduced in all copies, and that you
     add no other conditions whatsoever to those of this License.  You
     may not use technical measures to obstruct or control the reading
     or further copying of the copies you make or distribute.  However,
     you may accept compensation in exchange for copies.  If you
     distribute a large enough number of copies you must also follow the
     conditions in section 3.

     You may also lend copies, under the same conditions stated above,
     and you may publicly display copies.

  3. COPYING IN QUANTITY

     If you publish printed copies (or copies in media that commonly
     have printed covers) of the Document, numbering more than 100, and
     the Document's license notice requires Cover Texts, you must
     enclose the copies in covers that carry, clearly and legibly, all
     these Cover Texts: Front-Cover Texts on the front cover, and
     Back-Cover Texts on the back cover.  Both covers must also clearly
     and legibly identify you as the publisher of these copies.  The
     front cover must present the full title with all words of the title
     equally prominent and visible.  You may add other material on the
     covers in addition.  Copying with changes limited to the covers, as
     long as they preserve the title of the Document and satisfy these
     conditions, can be treated as verbatim copying in other respects.

     If the required texts for either cover are too voluminous to fit
     legibly, you should put the first ones listed (as many as fit
     reasonably) on the actual cover, and continue the rest onto
     adjacent pages.

     If you publish or distribute Opaque copies of the Document
     numbering more than 100, you must either include a machine-readable
     Transparent copy along with each Opaque copy, or state in or with
     each Opaque copy a computer-network location from which the general
     network-using public has access to download using public-standard
     network protocols a complete Transparent copy of the Document, free
     of added material.  If you use the latter option, you must take
     reasonably prudent steps, when you begin distribution of Opaque
     copies in quantity, to ensure that this Transparent copy will
     remain thus accessible at the stated location until at least one
     year after the last time you distribute an Opaque copy (directly or
     through your agents or retailers) of that edition to the public.

     It is requested, but not required, that you contact the authors of
     the Document well before redistributing any large number of copies,
     to give them a chance to provide you with an updated version of the
     Document.

  4. MODIFICATIONS

     You may copy and distribute a Modified Version of the Document
     under the conditions of sections 2 and 3 above, provided that you
     release the Modified Version under precisely this License, with the
     Modified Version filling the role of the Document, thus licensing
     distribution and modification of the Modified Version to whoever
     possesses a copy of it.  In addition, you must do these things in
     the Modified Version:

       A. Use in the Title Page (and on the covers, if any) a title
          distinct from that of the Document, and from those of previous
          versions (which should, if there were any, be listed in the
          History section of the Document).  You may use the same title
          as a previous version if the original publisher of that
          version gives permission.

       B. List on the Title Page, as authors, one or more persons or
          entities responsible for authorship of the modifications in
          the Modified Version, together with at least five of the
          principal authors of the Document (all of its principal
          authors, if it has fewer than five), unless they release you
          from this requirement.

       C. State on the Title page the name of the publisher of the
          Modified Version, as the publisher.

       D. Preserve all the copyright notices of the Document.

       E. Add an appropriate copyright notice for your modifications
          adjacent to the other copyright notices.

       F. Include, immediately after the copyright notices, a license
          notice giving the public permission to use the Modified
          Version under the terms of this License, in the form shown in
          the Addendum below.

       G. Preserve in that license notice the full lists of Invariant
          Sections and required Cover Texts given in the Document's
          license notice.

       H. Include an unaltered copy of this License.

       I. Preserve the section Entitled "History", Preserve its Title,
          and add to it an item stating at least the title, year, new
          authors, and publisher of the Modified Version as given on the
          Title Page.  If there is no section Entitled "History" in the
          Document, create one stating the title, year, authors, and
          publisher of the Document as given on its Title Page, then add
          an item describing the Modified Version as stated in the
          previous sentence.

       J. Preserve the network location, if any, given in the Document
          for public access to a Transparent copy of the Document, and
          likewise the network locations given in the Document for
          previous versions it was based on.  These may be placed in the
          "History" section.  You may omit a network location for a work
          that was published at least four years before the Document
          itself, or if the original publisher of the version it refers
          to gives permission.

       K. For any section Entitled "Acknowledgements" or "Dedications",
          Preserve the Title of the section, and preserve in the section
          all the substance and tone of each of the contributor
          acknowledgements and/or dedications given therein.

       L. Preserve all the Invariant Sections of the Document, unaltered
          in their text and in their titles.  Section numbers or the
          equivalent are not considered part of the section titles.

       M. Delete any section Entitled "Endorsements".  Such a section
          may not be included in the Modified Version.

       N. Do not retitle any existing section to be Entitled
          "Endorsements" or to conflict in title with any Invariant
          Section.

       O. Preserve any Warranty Disclaimers.

     If the Modified Version includes new front-matter sections or
     appendices that qualify as Secondary Sections and contain no
     material copied from the Document, you may at your option designate
     some or all of these sections as invariant.  To do this, add their
     titles to the list of Invariant Sections in the Modified Version's
     license notice.  These titles must be distinct from any other
     section titles.

     You may add a section Entitled "Endorsements", provided it contains
     nothing but endorsements of your Modified Version by various
     parties--for example, statements of peer review or that the text
     has been approved by an organization as the authoritative
     definition of a standard.

     You may add a passage of up to five words as a Front-Cover Text,
     and a passage of up to 25 words as a Back-Cover Text, to the end of
     the list of Cover Texts in the Modified Version.  Only one passage
     of Front-Cover Text and one of Back-Cover Text may be added by (or
     through arrangements made by) any one entity.  If the Document
     already includes a cover text for the same cover, previously added
     by you or by arrangement made by the same entity you are acting on
     behalf of, you may not add another; but you may replace the old
     one, on explicit permission from the previous publisher that added
     the old one.

     The author(s) and publisher(s) of the Document do not by this
     License give permission to use their names for publicity for or to
     assert or imply endorsement of any Modified Version.

  5. COMBINING DOCUMENTS

     You may combine the Document with other documents released under
     this License, under the terms defined in section 4 above for
     modified versions, provided that you include in the combination all
     of the Invariant Sections of all of the original documents,
     unmodified, and list them all as Invariant Sections of your
     combined work in its license notice, and that you preserve all
     their Warranty Disclaimers.

     The combined work need only contain one copy of this License, and
     multiple identical Invariant Sections may be replaced with a single
     copy.  If there are multiple Invariant Sections with the same name
     but different contents, make the title of each such section unique
     by adding at the end of it, in parentheses, the name of the
     original author or publisher of that section if known, or else a
     unique number.  Make the same adjustment to the section titles in
     the list of Invariant Sections in the license notice of the
     combined work.

     In the combination, you must combine any sections Entitled
     "History" in the various original documents, forming one section
     Entitled "History"; likewise combine any sections Entitled
     "Acknowledgements", and any sections Entitled "Dedications".  You
     must delete all sections Entitled "Endorsements."

  6. COLLECTIONS OF DOCUMENTS

     You may make a collection consisting of the Document and other
     documents released under this License, and replace the individual
     copies of this License in the various documents with a single copy
     that is included in the collection, provided that you follow the
     rules of this License for verbatim copying of each of the documents
     in all other respects.

     You may extract a single document from such a collection, and
     distribute it individually under this License, provided you insert
     a copy of this License into the extracted document, and follow this
     License in all other respects regarding verbatim copying of that
     document.

  7. AGGREGATION WITH INDEPENDENT WORKS

     A compilation of the Document or its derivatives with other
     separate and independent documents or works, in or on a volume of a
     storage or distribution medium, is called an "aggregate" if the
     copyright resulting from the compilation is not used to limit the
     legal rights of the compilation's users beyond what the individual
     works permit.  When the Document is included in an aggregate, this
     License does not apply to the other works in the aggregate which
     are not themselves derivative works of the Document.

     If the Cover Text requirement of section 3 is applicable to these
     copies of the Document, then if the Document is less than one half
     of the entire aggregate, the Document's Cover Texts may be placed
     on covers that bracket the Document within the aggregate, or the
     electronic equivalent of covers if the Document is in electronic
     form.  Otherwise they must appear on printed covers that bracket
     the whole aggregate.

  8. TRANSLATION

     Translation is considered a kind of modification, so you may
     distribute translations of the Document under the terms of section
     4.  Replacing Invariant Sections with translations requires special
     permission from their copyright holders, but you may include
     translations of some or all Invariant Sections in addition to the
     original versions of these Invariant Sections.  You may include a
     translation of this License, and all the license notices in the
     Document, and any Warranty Disclaimers, provided that you also
     include the original English version of this License and the
     original versions of those notices and disclaimers.  In case of a
     disagreement between the translation and the original version of
     this License or a notice or disclaimer, the original version will
     prevail.

     If a section in the Document is Entitled "Acknowledgements",
     "Dedications", or "History", the requirement (section 4) to
     Preserve its Title (section 1) will typically require changing the
     actual title.

  9. TERMINATION

     You may not copy, modify, sublicense, or distribute the Document
     except as expressly provided under this License.  Any attempt
     otherwise to copy, modify, sublicense, or distribute it is void,
     and will automatically terminate your rights under this License.

     However, if you cease all violation of this License, then your
     license from a particular copyright holder is reinstated (a)
     provisionally, unless and until the copyright holder explicitly and
     finally terminates your license, and (b) permanently, if the
     copyright holder fails to notify you of the violation by some
     reasonable means prior to 60 days after the cessation.

     Moreover, your license from a particular copyright holder is
     reinstated permanently if the copyright holder notifies you of the
     violation by some reasonable means, this is the first time you have
     received notice of violation of this License (for any work) from
     that copyright holder, and you cure the violation prior to 30 days
     after your receipt of the notice.

     Termination of your rights under this section does not terminate
     the licenses of parties who have received copies or rights from you
     under this License.  If your rights have been terminated and not
     permanently reinstated, receipt of a copy of some or all of the
     same material does not give you any rights to use it.

  10. FUTURE REVISIONS OF THIS LICENSE

     The Free Software Foundation may publish new, revised versions of
     the GNU Free Documentation License from time to time.  Such new
     versions will be similar in spirit to the present version, but may
     differ in detail to address new problems or concerns.  See
     <http://www.gnu.org/copyleft/>.

     Each version of the License is given a distinguishing version
     number.  If the Document specifies that a particular numbered
     version of this License "or any later version" applies to it, you
     have the option of following the terms and conditions either of
     that specified version or of any later version that has been
     published (not as a draft) by the Free Software Foundation.  If the
     Document does not specify a version number of this License, you may
     choose any version ever published (not as a draft) by the Free
     Software Foundation.  If the Document specifies that a proxy can
     decide which future versions of this License can be used, that
     proxy's public statement of acceptance of a version permanently
     authorizes you to choose that version for the Document.

  11. RELICENSING

     "Massive Multiauthor Collaboration Site" (or "MMC Site") means any
     World Wide Web server that publishes copyrightable works and also
     provides prominent facilities for anybody to edit those works.  A
     public wiki that anybody can edit is an example of such a server.
     A "Massive Multiauthor Collaboration" (or "MMC") contained in the
     site means any set of copyrightable works thus published on the MMC
     site.

     "CC-BY-SA" means the Creative Commons Attribution-Share Alike 3.0
     license published by Creative Commons Corporation, a not-for-profit
     corporation with a principal place of business in San Francisco,
     California, as well as future copyleft versions of that license
     published by that same organization.

     "Incorporate" means to publish or republish a Document, in whole or
     in part, as part of another Document.

     An MMC is "eligible for relicensing" if it is licensed under this
     License, and if all works that were first published under this
     License somewhere other than this MMC, and subsequently
     incorporated in whole or in part into the MMC, (1) had no cover
     texts or invariant sections, and (2) were thus incorporated prior
     to November 1, 2008.

     The operator of an MMC Site may republish an MMC contained in the
     site under CC-BY-SA on the same site at any time before August 1,
     2009, provided the MMC is eligible for relicensing.

ADDENDUM: How to use this License for your documents
====================================================

To use this License in a document you have written, include a copy of
the License in the document and put the following copyright and license
notices just after the title page:

       Copyright (C)  YEAR  YOUR NAME.
       Permission is granted to copy, distribute and/or modify this document
       under the terms of the GNU Free Documentation License, Version 1.3
       or any later version published by the Free Software Foundation;
       with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
       Texts.  A copy of the license is included in the section entitled ``GNU
       Free Documentation License''.

   If you have Invariant Sections, Front-Cover Texts and Back-Cover
Texts, replace the "with...Texts." line with this:

         with the Invariant Sections being LIST THEIR TITLES, with
         the Front-Cover Texts being LIST, and with the Back-Cover Texts
         being LIST.

   If you have Invariant Sections without Cover Texts, or some other
combination of the three, merge those two alternatives to suit the
situation.

   If your document contains nontrivial examples of program code, we
recommend releasing these examples in parallel under your choice of free
software license, such as the GNU General Public License, to permit
their use in free software.


File: inetutils.info,  Node: Index,  Prev: GNU Free Documentation License,  Up: Top

Index
*****

 [index ]
* Menu:

* %a:                                    telnetd invocation.  (line  91)
* %d:                                    telnetd invocation.  (line  94)
* %h:                                    telnetd invocation.  (line  97)
* %l:                                    telnetd invocation.  (line 100)
* %L:                                    telnetd invocation.  (line 103)
* %t:                                    telnetd invocation.  (line 106)
* %T:                                    telnetd invocation.  (line 109)
* %u:                                    telnetd invocation.  (line 112)
* %U:                                    telnetd invocation.  (line 115)
* --:                                    Common options.      (line  27)
* --acl:                                 talkd invocation.    (line  39)
* --active:                              Ftp options.         (line  19)
* --anonymous-only:                      ftpd invocation.     (line  22)
* --auth:                                ftpd invocation.     (line  26)
* --authmode:                            telnetd invocation.  (line  10)
* --binary:                              telnet invocation.   (line  26)
* --binary-output:                       telnet invocation.   (line  63)
* --bind:                                syslogd invocation.  (line  66)
* --d:                                   talkd invocation.    (line  43)
* --daemon:                              ftpd invocation.     (line  35)
* --debug:                               Ftp options.         (line  23)
* --debug <1>:                           telnet invocation.   (line  38)
* --debug <2>:                           Invocation.          (line   9)
* --debug <3>:                           syslogd invocation.  (line  47)
* --debug <4>:                           ftpd invocation.     (line  40)
* --debug <5>:                           talkd invocation.    (line  43)
* --debug <6>:                           telnetd invocation.  (line  15)
* --disable-auth:                        telnet invocation.   (line  79)
* --disable-auth-type:                   telnetd invocation.  (line  63)
* --encrypt:                             telnet invocation.   (line  75)
* --environment:                         Invocation.          (line  15)
* --escape:                              telnet invocation.   (line  42)
* --exec-login:                          telnetd invocation.  (line  30)
* --help:                                Common options.      (line  16)
* --hop:                                 syslogd invocation.  (line  96)
* --idle-timeout:                        talkd invocation.    (line  47)
* --inet:                                syslogd invocation.  (line  59)
* --ipany:                               syslogd invocation.  (line  79)
* --ipv4:                                Ftp options.         (line  11)
* --ipv4 <1>:                            telnet invocation.   (line  18)
* --ipv4 <2>:                            syslogd invocation.  (line  83)
* --ipv4 <3>:                            ftpd invocation.     (line  14)
* --ipv6:                                Ftp options.         (line  15)
* --ipv6 <1>:                            telnet invocation.   (line  22)
* --ipv6 <2>:                            syslogd invocation.  (line  87)
* --ipv6 <3>:                            ftpd invocation.     (line  18)
* --linemode:                            telnetd invocation.  (line  38)
* --local-time:                          syslogd invocation.  (line 113)
* --logging:                             ftpd invocation.     (line  45)
* --logging <1>:                         talkd invocation.    (line  51)
* --login:                               telnet invocation.   (line  30)
* --mark:                                syslogd invocation.  (line 100)
* --max-timeout:                         ftpd invocation.     (line  71)
* --netrc:                               Ftp options.         (line  40)
* --no-daemonize:                        Invocation.          (line  35)
* --no-daemonize <1>:                    syslogd invocation.  (line  38)
* --no-detach:                           syslogd invocation.  (line  34)
* --no-edit:                             Ftp options.         (line  27)
* --no-escape:                           telnet invocation.   (line  46)
* --no-forward:                          syslogd invocation.  (line  90)
* --no-glob:                             Ftp options.         (line  32)
* --no-hostinfo:                         telnetd invocation.  (line  34)
* --no-keepalive:                        telnetd invocation.  (line  43)
* --no-klog:                             syslogd invocation.  (line  76)
* --no-login:                            Ftp options.         (line  46)
* --no-login <1>:                        telnet invocation.   (line  55)
* --no-prompt:                           Ftp options.         (line  36)
* --no-rc:                               telnet invocation.   (line  34)
* --no-unixaf:                           syslogd invocation.  (line  73)
* --no-version:                          ftpd invocation.     (line  66)
* --non-rfc2577:                         ftpd invocation.     (line  52)
* --passive:                             Ftp options.         (line  57)
* --pidfile:                             Invocation.          (line  20)
* --pidfile <1>:                         syslogd invocation.  (line  30)
* --pidfile <2>:                         ftpd invocation.     (line  62)
* --prompt:                              Ftp options.         (line  60)
* --rate:                                Invocation.          (line  30)
* --rcdir:                               syslogd invocation.  (line  26)
* --rcfile:                              syslogd invocation.  (line  23)
* --realm:                               telnet invocation.   (line  50)
* --request-ttl:                         talkd invocation.    (line  57)
* --resolve:                             Invocation.          (line  25)
* --reverse-lookup:                      telnetd invocation.  (line  56)
* --rlogin:                              telnet invocation.   (line  71)
* --server-principal:                    telnetd invocation.  (line  47)
* --socket:                              syslogd invocation.  (line  51)
* --strict-policy:                       talkd invocation.    (line  61)
* --timeout:                             ftpd invocation.     (line  77)
* --timeout <1>:                         talkd invocation.    (line  67)
* --trace:                               Ftp options.         (line  66)
* --trace <1>:                           telnet invocation.   (line  67)
* --traditional-daemon:                  Invocation.          (line  39)
* --umask:                               ftpd invocation.     (line  82)
* --usage:                               Common options.      (line  20)
* --user:                                telnet invocation.   (line  59)
* --uucico:                              uucpd invocation.    (line  19)
* --verbose:                             Ftp options.         (line  70)
* --version:                             Common options.      (line  24)
* -4:                                    Ftp options.         (line  11)
* -4 <1>:                                telnet invocation.   (line  18)
* -4 <2>:                                syslogd invocation.  (line  83)
* -4 <3>:                                ftpd invocation.     (line  14)
* -6:                                    Ftp options.         (line  15)
* -6 <1>:                                telnet invocation.   (line  22)
* -6 <2>:                                syslogd invocation.  (line  87)
* -6 <3>:                                ftpd invocation.     (line  18)
* -8:                                    telnet invocation.   (line  26)
* -A:                                    Ftp options.         (line  19)
* -a:                                    telnet invocation.   (line  30)
* -A <1>:                                ftpd invocation.     (line  22)
* -a <1>:                                ftpd invocation.     (line  26)
* -a <2>:                                talkd invocation.    (line  39)
* -a <3>:                                telnetd invocation.  (line  10)
* -b:                                    syslogd invocation.  (line  66)
* -c:                                    telnet invocation.   (line  34)
* -d:                                    Ftp options.         (line  23)
* -d <1>:                                telnet invocation.   (line  38)
* -d <2>:                                Invocation.          (line   9)
* -D:                                    Invocation.          (line  35)
* -D <1>:                                syslogd invocation.  (line  38)
* -d <3>:                                syslogd invocation.  (line  47)
* -D <2>:                                ftpd invocation.     (line  35)
* -d <4>:                                ftpd invocation.     (line  40)
* -D <3>:                                telnetd invocation.  (line  15)
* -e:                                    Ftp options.         (line  27)
* -e <1>:                                telnet invocation.   (line  42)
* -E:                                    telnet invocation.   (line  46)
* -E <1>:                                telnetd invocation.  (line  30)
* -f:                                    syslogd invocation.  (line  23)
* -g:                                    Ftp options.         (line  32)
* -h:                                    syslogd invocation.  (line  96)
* -h <1>:                                telnetd invocation.  (line  34)
* -i:                                    Ftp options.         (line  36)
* -i <1>:                                talkd invocation.    (line  47)
* -i <2>:                                talkd invocation.    (line  51)
* -k:                                    telnet invocation.   (line  50)
* -K:                                    telnet invocation.   (line  55)
* -l:                                    telnet invocation.   (line  59)
* -L:                                    telnet invocation.   (line  63)
* -l <1>:                                syslogd invocation.  (line 104)
* -l <2>:                                ftpd invocation.     (line  45)
* -l <3>:                                telnetd invocation.  (line  38)
* -m:                                    syslogd invocation.  (line 100)
* -N:                                    Ftp options.         (line  40)
* -n:                                    Ftp options.         (line  46)
* -n <1>:                                telnet invocation.   (line  67)
* -n <2>:                                syslogd invocation.  (line  34)
* -n <3>:                                telnetd invocation.  (line  43)
* -p:                                    Ftp options.         (line  57)
* -p <1>:                                Invocation.          (line  20)
* -P:                                    syslogd invocation.  (line  30)
* -p <2>:                                syslogd invocation.  (line  51)
* -p <3>:                                ftpd invocation.     (line  62)
* -q:                                    ftpd invocation.     (line  66)
* -r:                                    telnet invocation.   (line  71)
* -R:                                    Invocation.          (line  30)
* -r <1>:                                syslogd invocation.  (line  59)
* -r <2>:                                talkd invocation.    (line  57)
* -s:                                    syslogd invocation.  (line 108)
* -S:                                    talkd invocation.    (line  61)
* -S <1>:                                telnetd invocation.  (line  47)
* -t:                                    Ftp options.         (line  66)
* -T:                                    Invocation.          (line  39)
* -T <1>:                                syslogd invocation.  (line 113)
* -T <2>:                                ftpd invocation.     (line  71)
* -t <1>:                                ftpd invocation.     (line  77)
* -t <2>:                                talkd invocation.    (line  67)
* -u:                                    ftpd invocation.     (line  82)
* -U:                                    telnetd invocation.  (line  56)
* -u <1>:                                uucpd invocation.    (line  19)
* -v:                                    Ftp options.         (line  70)
* -x:                                    telnet invocation.   (line  75)
* -X:                                    telnet invocation.   (line  79)
* -X <1>:                                telnetd invocation.  (line  63)
* .netrc:                                The .netrc file.     (line   6)
* bug, reporting:                        Introduction.        (line  14)
* common options:                        Common options.      (line   6)
* ftp:                                   ftp invocation.      (line   6)
* ftpd:                                  ftpd invocation.     (line   6)
* help, online:                          Common options.      (line  16)
* inetd:                                 inetd invocation.    (line   6)
* introduction:                          Introduction.        (line   6)
* option delimiter:                      Common options.      (line  27)
* syslogd:                               syslogd invocation.  (line   6)
* talk:                                  talk invocation.     (line   6)
* talkd:                                 talkd invocation.    (line   6)
* telnet:                                telnet invocation.   (line   6)
* telnetd:                               telnetd invocation.  (line   6)
* usage, online:                         Common options.      (line  20)
* uucpd:                                 uucpd invocation.    (line   6)
* version number, finding:               Common options.      (line  24)



Tag Table:
Node: Top1558
Node: Introduction3003
Node: Common options4568
Node: Exit status5632
Node: ftp invocation6072
Node: Ftp options7188
Ref: ftp options7325
Node: Ftp commands9157
Node: Ftp environment31860
Node: Aborting a file transfer32333
Node: File naming conventions33482
Node: File transfer parameters35275
Node: The .netrc file36214
Node: talk invocation38962
Node: telnet invocation41225
Ref: telnet options41595
Node: inetd invocation42784
Node: Invocation44217
Node: Configuration file45394
Node: Built-in services51748
Node: TCPMUX53122
Node: Inetd Environment54687
Node: Error Messages55548
Node: syslogd invocation57378
Node: ftpd invocation67816
Ref: ftpd standards71182
Ref: ftpd authentication74927
Ref: ftpd files77120
Ref: ftpusers file format77759
Node: talkd invocation79013
Node: telnetd invocation85930
Node: uucpd invocation90913
Node: GNU Free Documentation License92178
Node: Index117331

End Tag Table
